{"version":3,"sources":["assets/img/icons/common/facebook.svg","assets/img/icons/common/google.svg","assets/img/theme/journal.png","lib/firebase.js","assets/img/theme/profile_background.jpeg","assets/img/theme/warrior_wellness.png","components/Navbars/AdminNavbar.js","components/Sidebar/Sidebar.js","chat-window.js","App.js","components/Headers/Header.js","variables/charts_data.js","lib/redux/actions/charts.js","views/graphs.js","views/Index.js","components/Headers/UserHeader.js","views/examples/Profile.js","views/examples/Register.js","views/examples/Login.js","views/examples/Charts_page.js","views/examples/Journal/Journal.js","routes.js","lib/redux/actions/journal.js","views/examples/Journal/Journal_icon.js","layouts/Admin.js","layouts/Auth.js","lib/redux/reducers/journal.js","lib/redux/reducers/charts.js","lib/redux/reducers/index.js","index.js","variables/charts.js","assets/img/theme/team-4-800x800.jpg"],"names":["module","exports","Config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","AdminNavbar","localStorage","setItem","firebase","signOut","Navbar","className","expand","id","Container","fluid","this","props","brandText","Nav","navbar","UncontrolledDropdown","nav","DropdownToggle","Media","alt","src","require","DropdownMenu","right","DropdownItem","header","tag","to","Link","divider","onClick","e","tryLogOut","React","Component","Sidebar","state","collapseOpen","toggleCollapse","setState","closeCollapse","createLinks","routes","map","prop","key","name","NavItem","NavLink","layout","path","NavLinkRRD","activeClassName","icon","activeRoute","bind","routeName","location","pathname","indexOf","navbarBrandProps","bgColor","logo","innerLink","outterLink","href","target","type","NavbarBrand","imgAlt","imgSrc","preventDefault","window","Collapse","isOpen","Row","Col","xs","defaultProps","ChatWindow","messageList","newMessagesCount","appSetting","CometChat","AppSettingsBuilder","subscribePresenceForAllUsers","setRegion","build","init","then","console","log","error","User","setName","login","user","text","length","author","data","addMessageListener","MessageListener","onTextMessageReceived","message","_sendMessage","messageText","receiverType","RECEIVER_TYPE","USER","textMessage","TextMessage","sendMessage","fileList","objectURL","URL","createObjectURL","url","fileName","style","position","zIndex","agentProfile","teamName","imageUrl","onMessageWasSent","_onMessageWasSent","onFilesSelected","_onFilesSelected","handleClick","_handleClick","showEmoji","App","Header","lg","xl","Card","CardBody","CardTitle","overalls","connect","fetchedInitial","charts","fetchedChartsData","colors","100","200","300","400","500","600","700","800","900","config","initializeApp","default","db","firestore","global_data","a","email","getItem","docRef","collection","doc","get","docs","store","dispatch","getChartData","chartExample1","options","scales","yAxes","gridLines","color","zeroLineColor","ticks","callback","value","tooltips","callbacks","label","item","datasets","datasetIndex","yLabel","content","data1","canvas","labels","data2","data3","chartExample2","stacked","xAxes","maxBarThickness","backgroundColor","chartExample3","legend","display","usePointStyle","padding","index","substring","search","responsive","maintainAspectRatio","innerWidth","chartExample4","chartExample5","chartExample6","chartExample7","chartExample8","Graphs","toggleNavs","row","col","activeNav1","chartExample1Data","activeNav2","chartExample2Data","activeNav3","chartExample3Data","activeNav4","chartExample4Data","Chart","parseOptions","chartOptions","Spinner","width","height","size","CardHeader","pills","classnames","active","data-toggle","getDatasetAtEvent","Index","stressIncidents","dateSort","stressSort","showTextBox","Array","fill","orderBy","d","sort","b","date","split","stress_score","Table","scope","Button","scopr","onStressToggle","onDateToggle","incident","String","Input","defaultValue","reason","onChange","stress","time","description","plaintext","onDoubleClick","forceUpdate","UncontrolledTooltip","delay","placement","trigger","UserHeader","minHeight","backgroundImage","backgroundSize","backgroundPosition","md","Profile","Form","FormGroup","htmlFor","placeholder","rows","Register","invalid_credentials","account_created","first_name","last_name","password","showSpinner","email_already_in_use","tryGoogleSignIn","authListener","scrollTo","onAuthStateChanged","onAuthHandler","createUserWithEmailAndPassword","catch","code","provider","GoogleAuthProvider","signInWithPopup","result","token","credential","accessToken","errorCode","errorMessage","FacebookAuthProvider","displayName","signInWithEmailAndPassword","push","Modal","opacity","tryFacebookSignIn","boxShadow","tryLogInUser","Alert","role","InputGroup","InputGroupAddon","addonType","InputGroupText","autoComplete","tryCreateAccount","Login","loggedIn","Charts","Journal","showED","receiveEntries","where","snapshot","forEach","ref","delete","removeEntry","ListGroup","flush","entries","entry","ListGroupItem","onMouseEnter","onMouseLeave","subject","date_edited","date_created","bottom","onEntryEdit","onEntryDelete","component","journal","JournalIcon","journalSubmit","Date","today","getMonth","getDate","getFullYear","entry_num","parseInt","addEntry","updateFirestore","open","add","left","borderRadius","modalTransition","timeout","close","ModalBody","ModalFooter","created","last_edited","Admin","getRoutes","getBrandText","i","isLoggedIn","document","documentElement","scrollTop","scrollingElement","refs","mainContent","from","Auth","modalOpen","body","classList","remove","xmlns","preserveAspectRatio","version","viewBox","x","y","points","initialState","journalReducer","action","Object","assign","filtered","filter","excluded","edited","reverse","chartsReducer","allReducers","combineReducers","createStore","allReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","getElementById","elements","Rectangle","prototype","draw","top","signX","signY","borderSkipped","ctx","_chart","vm","_view","borderWidth","horizontal","base","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","cornerAt","corner","moveTo","nextCornerId","radius","lineTo","quadraticCurveTo","stroke","fonts","primary","secondary","info","success","danger","warning","defaults","global","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","point","line","tension","borderCapStyle","rectangle","arc","enabled","mode","intersect","doughnut","cutoutPercentage","legendCallback","chart","scaleService","updateScaleDefaults","borderDash","borderDashOffset","drawBorder","drawTicks","zeroLineWidth","zeroLineBorderDash","zeroLineBorderDashOffset","beginAtZero","drawOnChartArea","parent"],"mappings":"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","file":"static/js/main.7ab22896.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/facebook.a64a1d0a.svg\";","module.exports = __webpack_public_path__ + \"static/media/google.87be59a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/journal.e5d15edb.png\";","const Config = {\r\n    apiKey: \"AIzaSyAT35a6wJBeM4T92b0vHyLefh5QzTC92NA\",\r\n    authDomain: \"mentalhealth-2e530.firebaseapp.com\",\r\n    databaseURL: \"https://mentalhealth-2e530.firebaseio.com\",\r\n    projectId: \"mentalhealth-2e530\",\r\n    storageBucket: \"mentalhealth-2e530.appspot.com\",\r\n    messagingSenderId: \"928659331136\",\r\n    appId: \"1:928659331136:web:2b058e4fc5607638c3e7a5\",\r\n    measurementId: \"G-EHD7XP7RQZ\"\r\n};\r\n\r\nexport default Config;","module.exports = __webpack_public_path__ + \"static/media/profile_background.cdbbf803.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/warrior_wellness.72198801.png\";","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Navbar,\n  Nav,\n  Container,\n  Media\n} from \"reactstrap\";\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nclass AdminNavbar extends React.Component {\n  tryLogOut() {\n    localStorage.setItem('loggedIn', false)\n    firebase.auth().signOut();\n  }\n\n  render() {\n    return (\n      <>\n        <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\n          <Container fluid>\n            <span\n              className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\n            >\n              {this.props.brandText}\n            </span>\n            <Nav className=\"align-items-center d-none d-md-flex\" navbar>\n              <UncontrolledDropdown nav>\n                <DropdownToggle className=\"pr-0\" nav>\n                  <Media className=\"align-items-center\">\n                    <span className=\"avatar avatar-sm rounded-circle\">\n                      <img\n                        alt=\"...\"\n                        src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                      />\n                    </span>\n                    <Media className=\"ml-2 d-none d-lg-block\">\n                      <span className=\"mb-0 text-sm font-weight-bold\">\n                        Param Shah\n                      </span>\n                    </Media>\n                  </Media>\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                  <DropdownItem className=\"noti-title\" header tag=\"div\">\n                    <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                  </DropdownItem>\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-single-02\" />\n                    <span>My profile</span>\n                  </DropdownItem>\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-settings-gear-65\" />\n                    <span>Settings</span>\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem to=\"/auth/login\" tag={Link} onClick={(e) => this.tryLogOut()}>\n                    <i className=\"ni ni-user-run\" />\n                    <span>Logout</span>\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Container>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport {\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass Sidebar extends React.Component {\n  state = {\n    collapseOpen: false\n  };\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  // toggles collapse between opened and closed (true/false)\n  toggleCollapse = () => {\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // closes the collapse\n  closeCollapse = () => {\n    this.setState({\n      collapseOpen: false\n    });\n  };\n  // creates the links that appear in the left menu / Sidebar\n  createLinks = routes => {\n    return routes.map((prop, key) => {\n      if (prop.name != \"Login\" && prop.name != \"Register\"){     //don't want to create a sidebar link to login and register (can't delete from routes.js so this)\n        return (\n          <NavItem key={key}>\n            <NavLink\n              to={prop.layout + prop.path}\n              tag={NavLinkRRD}\n              onClick={this.closeCollapse}\n              activeClassName=\"active\"\n            >\n              <i className={prop.icon} />\n              {prop.name}\n            </NavLink>\n          </NavItem>\n        );\n      }\n    });\n  };\n  render() {\n    const { bgColor, routes, logo } = this.props;\n    let navbarBrandProps;\n    if (logo && logo.innerLink) {\n      navbarBrandProps = {\n        to: logo.innerLink,\n        tag: Link\n      };\n    } else if (logo && logo.outterLink) {\n      navbarBrandProps = {\n        href: logo.outterLink,\n        target: \"_blank\"\n      };\n    }\n    return (\n      <Navbar\n        className=\"navbar-vertical fixed-left navbar-light bg-white\"\n        expand=\"md\"\n        id=\"sidenav-main\"\n      >\n        <Container fluid>\n          {/* Toggler */}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            onClick={this.toggleCollapse}\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {/* Brand */}\n          {logo ? (\n            <NavbarBrand className=\"pt-1\" {...navbarBrandProps}>\n              <img\n                alt={logo.imgAlt}\n                className=\"navbar-brand-img\"\n                src={logo.imgSrc}\n              />\n            </NavbarBrand>\n          ) : null}\n          {/* User */}\n          <Nav className=\"align-items-center d-md-none\">\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav>\n                <Media className=\"align-items-center\">\n                  <span className=\"avatar avatar-sm rounded-circle\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                    />\n                  </span>\n                </Media>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                  <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-single-02\" />\n                  <span>My profile</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-settings-gear-65\" />\n                  <span>Settings</span>\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem to=\"/auth/login\" tag={Link} onClick={e => {e.preventDefault(); window.location.href = \"/auth/login\"}}>\n                  <i className=\"ni ni-user-run\" />\n                  <span>Logout</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          {/* Collapse */}\n          <Collapse navbar isOpen={this.state.collapseOpen}>\n            {/* Collapse header */}\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                {logo ? (\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    {logo.innerLink ? (\n                      <Link to={logo.innerLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </Link>\n                    ) : (\n                      <a href={logo.outterLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </a>\n                    )}\n                  </Col>\n                ) : null}\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    onClick={this.toggleCollapse}\n                  >\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            {/* Navigation */}\n            <Nav navbar>{this.createLinks(routes)}</Nav>\n            {/* Divider */}\n            <hr className=\"my-3\" />\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired\n  })\n};\n\nexport default Sidebar;\n","import React, {Component} from 'react';\r\nimport {Launcher} from 'react-chat-window';\r\n\r\nimport { CometChat } from \"@cometchat-pro/chat\";\r\n\r\n//class for react-chat-window\r\nclass ChatWindow extends Component {\r\n \r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      messageList: [],\r\n      newMessagesCount: 0,\r\n      isOpen: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    /////initialize cometChat\r\n    var appID = \"162528093d8ef33\";\r\n    var region = \"us\";\r\n    var appSetting = new CometChat.AppSettingsBuilder().subscribePresenceForAllUsers().setRegion(region).build();\r\n    CometChat.init(appID, appSetting).then(\r\n      () => {\r\n        console.log(\"Initialization completed successfully\");\r\n        // You can now call login function.\r\n      },\r\n      error => {\r\n        console.log(\"Initialization failed with error:\", error);\r\n        // Check the reason for error and take appropriate action.\r\n      }\r\n    );\r\n\r\n    ////////create user and authentication\r\n    var apiKey = \"d9acdcf72ee2eef8fb5181a7403440902f7abb3f\";\r\n    var UID = \"user1\";\r\n    var name = \"Param\";\r\n\r\n    var user = new CometChat.User(UID);\r\n\r\n    user.setName(name);\r\n\r\n    // if (the first time logging in)\r\n    // CometChat.createUser(user, apiKey).then(\r\n    //     user => {\r\n    //         console.log(\"user created\", user);\r\n    //     },error => {\r\n    //         console.log(\"error\", error);\r\n    //     }\r\n    // )\r\n\r\n    /////////login\r\n    CometChat.login(UID, apiKey).then(\r\n      user => {\r\n        console.log(\"Login Successful:\", { user });    \r\n      },\r\n      error => {\r\n        console.log(\"Login failed with exception:\", { error });    \r\n      }\r\n    );\r\n  }\r\n\r\n  _sendMessage(text) {\r\n    const newMessagesCount = this.state.isOpen ? this.state.newMessagesCount : this.state.newMessagesCount + 1;\r\n    if (text.length > 0) {\r\n      this.setState({\r\n        newMessagesCount: newMessagesCount,\r\n        messageList: [...this.state.messageList, {\r\n          author: 'them',\r\n          type: 'text',\r\n          data: { text }\r\n        }]\r\n      })\r\n      console.log(`New message: ${text}`);\r\n    }\r\n  }\r\n \r\n  componentDidUpdate() {\r\n    var listenerID = \"user1\";\r\n    CometChat.addMessageListener(\r\n      listenerID, \r\n      new CometChat.MessageListener({\r\n        onTextMessageReceived: message => {\r\n          console.log(\"Message received successfully:\", message);\r\n          this._sendMessage(message.data.text);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  _onMessageWasSent(message) {\r\n    this.setState({\r\n      messageList: [...this.state.messageList, message]\r\n    })\r\n    console.log(`New message`);\r\n\r\n    // var receiverID = user1; \r\n    var messageText = message.data.text; \r\n    var receiverType = CometChat.RECEIVER_TYPE.USER; \r\n    var receiverID = \"user1\";\r\n\r\n    var textMessage = new CometChat.TextMessage(receiverID, messageText, receiverType);      \r\n    \r\n    CometChat.sendMessage(textMessage).then( \r\n      message => { \r\n          console.log(\"Message sent successfully:\", message); \r\n          // Do something with message \r\n      }, \r\n      error => { \r\n          console.log(\"Message sending failed with error:\", error); \r\n          // Handle any error \r\n      } \r\n    );\r\n  }\r\n \r\n  _onFilesSelected(fileList) {\r\n    const objectURL = window.URL.createObjectURL(fileList[0]);\r\n    this.setState({\r\n      messageList: [...this.state.messageList, {\r\n        type: 'file', author: 'me',\r\n        data: {\r\n          url: objectURL,\r\n          fileName: fileList[0].name\r\n        }\r\n      }]\r\n    });\r\n  }\r\n\r\n  _handleClick() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen,\r\n      newMessagesCount: 0\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div style={{position:'relative', zIndex: '1'}}>\r\n      <Launcher\r\n        agentProfile={{\r\n          teamName: 'react-chat-window-param',\r\n          imageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png'\r\n        }}\r\n        onMessageWasSent={this._onMessageWasSent.bind(this)}\r\n        onFilesSelected={this._onFilesSelected.bind(this)}\r\n        messageList={this.state.messageList}\r\n        newMessagesCount={this.state.newMessagesCount}\r\n        handleClick={this._handleClick.bind(this)}\r\n        isOpen={this.state.isOpen}\r\n        showEmoji\r\n      />\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChatWindow;","import React, { Component } from 'react';\nimport ChatWindow from './chat-window.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <ChatWindow />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\n// reactstrap components\nimport { Card, CardBody, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nimport {connect} from 'react-redux'\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n          <Container fluid>\n            <div className=\"header-body\">\n              {/* Card stats */}\n              <Row>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Stress Score\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            {this.props.overalls[\"stress\"] && this.props.overalls[\"stress\"][\"score\"]}\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-bar\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        {this.props.overalls[\"stress\"] && this.props.overalls[\"stress\"][\"value_change\"] == \"up\" ?\n                          (<span className=\"text-danger mr-2\">\n                            <i className=\"fa fa-arrow-up\" /> {this.props.overalls[\"stress\"][\"percent_change\"]}%\n                          </span>) \n                          : \n                          (<span className=\"text-success mr-2\">\n                            <i className=\"fa fa-arrow-down\" /> {this.props.overalls[\"stress\"] && this.props.overalls[\"stress\"][\"percent_change\"]}%\n                          </span>)\n                          }{\" \"}\n                        <span className=\"text-nowrap\">Since last week</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Sleep\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            {this.props.overalls[\"sleep\"] && this.props.overalls[\"sleep\"][\"score\"] } hours/night\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-warning text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-pie\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        {this.props.overalls[\"sleep\"] && this.props.overalls[\"sleep\"][\"value_change\"] == \"up\" ?\n                          (<span className=\"text-success mr-2\">\n                            <i className=\"fa fa-arrow-up\" /> {this.props.overalls[\"sleep\"][\"percent_change\"]}%\n                          </span>) \n                          : \n                          (<span className=\"text-danger mr-2\">\n                            <i className=\"fa fa-arrow-down\" /> {this.props.overalls[\"sleep\"] && this.props.overalls[\"sleep\"][\"percent_change\"]}%\n                          </span>)\n                          }{\" \"}\n                        <span className=\"text-nowrap\">Since last week</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Stress Management\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            {this.props.overalls[\"stress_management\"] && this.props.overalls[\"stress_management\"][\"score\"]} mins/day\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-yellow text-white rounded-circle shadow\">\n                            <i className=\"fas fa-users\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        {this.props.overalls[\"stress_management\"] && this.props.overalls[\"stress_management\"][\"value_change\"] == \"up\" ?\n                          (<span className=\"text-success mr-2\">\n                            <i className=\"fa fa-arrow-up\" /> {this.props.overalls[\"stress_management\"][\"percent_change\"]}%\n                          </span>) \n                          : \n                          (<span className=\"text-danger mr-2\">\n                            <i className=\"fa fa-arrow-down\" /> {this.props.overalls[\"stress_management\"] && this.props.overalls[\"stress_management\"][\"percent_change\"]}%\n                          </span>)\n                          }{\" \"}\n                        <span className=\"text-nowrap\">Since last week</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            High-Stress Events\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            {this.props.overalls[\"stress_events\"] && this.props.overalls[\"stress_events\"][\"score\"]}\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-info text-white rounded-circle shadow\">\n                            <i className=\"fas fa-percent\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        {this.props.overalls[\"stress_events\"] && this.props.overalls[\"stress_events\"][\"value_change\"] == \"up\" ?\n                          (<span className=\"text-danger mr-2\">\n                            <i className=\"fa fa-arrow-up\" /> {this.props.overalls[\"stress_events\"][\"percent_change\"]}%\n                          </span>) \n                          : \n                          (<span className=\"text-success mr-2\">\n                            <i className=\"fa fa-arrow-down\" /> {this.props.overalls[\"stress_events\"] && this.props.overalls[\"stress_events\"][\"percent_change\"]}%\n                          </span>)\n                          }{\" \"}\n                        <span className=\"text-nowrap\">Since last month</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </div>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    fetchedInitial: state.charts.fetchedChartsData,\n    overalls: state.charts.overalls\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n)(Header)","import store from '../index'\r\nimport { fetchedChartsData, addOveralls } from 'lib/redux/actions/charts';\r\n\r\n// Colors\r\nvar colors = {\r\n    gray: {\r\n        100: \"#f6f9fc\",\r\n        200: \"#e9ecef\",\r\n        300: \"#dee2e6\",\r\n        400: \"#ced4da\",\r\n        500: \"#adb5bd\",\r\n        600: \"#8898aa\",\r\n        700: \"#525f7f\",\r\n        800: \"#32325d\",\r\n        900: \"#212529\"\r\n    },\r\n    theme: {\r\n        default: \"#172b4d\",\r\n        primary: \"#5e72e4\",\r\n        secondary: \"#f4f5f7\",\r\n        info: \"#11cdef\",\r\n        success: \"#2dce89\",\r\n        danger: \"#f5365c\",\r\n        warning: \"#fb6340\"\r\n    },\r\n    black: \"#12263F\",\r\n    white: \"#FFFFFF\",\r\n    transparent: \"transparent\"\r\n};\r\n\r\nconst config = require('../lib/firebase');\r\n\r\nconst firebase = require(\"firebase/app\");\r\nrequire(\"firebase/firestore\");\r\n\r\nfirebase.initializeApp(config.default);\r\nlet db = firebase.firestore();\r\n\r\nlet global_data = {\r\n  \"stress_bar\": {\r\n    \"day\": [],\r\n    \"week\": [],\r\n    \"month\": []\r\n  },\r\n  \"sleep\": {\r\n    \"week\": {\r\n      \"total\": [],\r\n      \"awake\": [],\r\n      \"light\": [],\r\n      \"deep\": [],\r\n    },\r\n    \"month\": {\r\n      \"total\": [],\r\n      \"awake\": [],\r\n      \"light\": [],\r\n      \"deep\": [],\r\n    }\r\n  },\r\n  \"stress_pie_score\": {\r\n    \"week\": [],\r\n    \"month\": [],\r\n  },\r\n  \"stress_pie_type\": {\r\n    \"week\": [],\r\n    \"month\": [],\r\n  },\r\n  \"stress_bar_score\": {\r\n    \"week\": [],\r\n    \"month\": [],\r\n  },\r\n  \"stress_bar_type\": {\r\n    \"week\": [],\r\n    \"month\": [],\r\n  },\r\n  \"stress_management\": {\r\n    \"week\": [],\r\n    \"month\": []\r\n  }\r\n}\r\n\r\nconst getChartData = async () => {\r\n  const email = localStorage.getItem(\"email\")\r\n\r\n  var docRef = db.collection(\"users\").doc(email).collection(\"charts\")\r\n  var doc = await docRef.get()\r\n\r\n  doc.docs.map(doc => {global_data[doc.id] = doc.data()})\r\n\r\n  global_data[\"stress_bar_score\"] = global_data[\"stress_pie_score\"]\r\n  global_data[\"stress_bar_type\"] = global_data[\"stress_pie_type\"]\r\n\r\n  store.dispatch(fetchedChartsData())\r\n  store.dispatch(addOveralls(global_data[\"overalls\"]))\r\n}\r\n\r\ngetChartData()\r\n\r\n// Example 1 of Chart inside src/views/Index.js (Sales value - Card)\r\nlet chartExample1 = {\r\n    options: {\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            gridLines: {\r\n              color: colors.gray[900],\r\n              zeroLineColor: colors.gray[900]\r\n            },\r\n            ticks: {\r\n              callback: function(value) {\r\n                if (!(value % 5)) {\r\n                  return value;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      tooltips: {\r\n        callbacks: {\r\n          label: function(item, data) {\r\n            var label = data.datasets[item.datasetIndex].label || \"\";\r\n            var yLabel = item.yLabel;\r\n            var content = \"\";\r\n  \r\n            if (data.datasets.length > 1) {\r\n              content += label;\r\n            }\r\n  \r\n            // content += '$' + yLabel + 'k';\r\n            content += yLabel;\r\n            return content;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    data1: canvas => {//Stress score by day\r\n      return {\r\n        labels: [\"12am\", \"3am\", \"6am\", \"9am\", \"12am\", \"3pm\", \"6pm\", \"9pm\", \"12am\"],\r\n        datasets: [\r\n          {\r\n            label: \"Stress Score by Day\",\r\n            data: global_data[\"stress_bar\"][\"day\"] //[3, 0, 0, 3, 12, 22, 14, 10, 4]\r\n          }\r\n        ]\r\n      };\r\n    },\r\n    data2: canvas => {//Stress score by week\r\n      return {\r\n        labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\r\n        datasets: [\r\n          {\r\n            label: \"Stress Score by Week\",\r\n            data: global_data[\"stress_bar\"][\"week\"]//[20, 18, 15, 20, 21, 24, 19]\r\n          }\r\n        ]\r\n      };\r\n    },\r\n    data3: canvas => {//Stress score by month\r\n      return {\r\n        labels: [\"1st\", \"2nd\", \"4th\", \"6th\", \"8th\", \"10th\", \"12th\", \"14th\", \"16th\", \"18th\", \"20th\", \"22nd\", \"24th\", \"26th\", \"28th\", \"30th\"],\r\n        datasets: [\r\n          {\r\n            label: \"Stress Score by Month\",\r\n            data: global_data[\"stress_bar\"][\"month\"]//[10, 16, 18, 15, 20, 21, 24, 19, 13, 14, 11, 20, 21, 24, 19, 13]\r\n          }\r\n        ]\r\n      };\r\n    }\r\n};\r\n  \r\n  // Example 2 of Chart inside src/views/Index.js (Total orders - Card)\r\nlet chartExample2 = {\r\noptions: {\r\n    scales: {\r\n    yAxes: [\r\n        {\r\n        ticks: {\r\n            callback: function(value) {\r\n            if (!(value % 2)) {\r\n                //return '$' + value + 'k'\r\n                return value;\r\n            }\r\n            }\r\n        },\r\n        stacked: true,\r\n        }\r\n    ],\r\n    xAxes: [{\r\n      stacked: true,\r\n    }]\r\n    },\r\n    tooltips: {\r\n        callbacks: {\r\n            label: function(item, data) {\r\n            var label = data.datasets[item.datasetIndex].label || \"\";\r\n            var yLabel = item.yLabel;\r\n            var content = \"\";\r\n            if (data.datasets.length > 1) {\r\n                content += label;\r\n            }\r\n            content += \" \" + yLabel;\r\n            return content;\r\n            }\r\n    }\r\n    }\r\n},\r\ndata1: canvas => {//Sleep by week\r\n    return {\r\n    labels: [\"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\", \"Sun\"],\r\n    datasets: [\r\n        {\r\n          label: \"Awake\",\r\n          data: global_data[\"sleep\"][\"week\"][\"awake\"], //[0.2, 0.7, 0.5, 0.3, 0.9, 0.2, 0.3],\r\n          maxBarThickness: 10,\r\n          backgroundColor: \"#A91E2A\"\r\n        },\r\n        {\r\n          label: \"Light Sleep\",\r\n          data: global_data[\"sleep\"][\"week\"][\"light\"], //[2.2, 2, 2.5, 2.3, 2.9, 2.2, 2.3],\r\n          maxBarThickness: 10,\r\n          backgroundColor: '#FEB300', //\"#673AB7\",\r\n        },\r\n        {\r\n          label: \"Deep Sleep\",\r\n          data: global_data[\"sleep\"][\"week\"][\"deep\"],//[4.2, 4, 4.5, 4.3, 4.1, 4.2, 4.3],\r\n          maxBarThickness: 10,\r\n          backgroundColor: \"#0dd406\",\r\n        },\r\n    ]\r\n    };\r\n},\r\ndata2: canvas => { //sleep by month\r\n    return {  \r\n    labels: [\"Week 1\", \"Week 2\", \"Week 3\", \"Week 4\"],\r\n    datasets: [\r\n        {\r\n          label: \"Awake\",\r\n          data: global_data[\"sleep\"][\"month\"][\"awake\"],//[0.2, 0.3, 0.1, 0.5],\r\n          maxBarThickness: 10\r\n        },\r\n        {\r\n          label: \"Light Sleep\",\r\n          data: global_data[\"sleep\"][\"month\"][\"light\"],//[2.2, 2.4, 2.1, 2.5],\r\n          maxBarThickness: 10\r\n        },\r\n        {\r\n          label: \"Deep Sleep\",\r\n          data: global_data[\"sleep\"][\"month\"][\"deep\"],//[4.2, 4.7, 4.1, 4.5],\r\n          maxBarThickness: 10\r\n        },\r\n    ]\r\n    };\r\n}\r\n};\r\n\r\nlet chartExample3 = {\r\n    options: {\r\n        legend: {\r\n        display: true,\r\n        position: \"bottom\",\r\n        labels: {\r\n            usePointStyle: true,\r\n            padding: 20\r\n        }\r\n        },\r\n        tooltips: {\r\n            callbacks: {\r\n                label: function(item, data) {\r\n                    return data.labels[item.index].substring(0, data.labels[item.index].search('[(]')) + \": \" + data.datasets[item.datasetIndex].data[item.index];\r\n                }\r\n        }\r\n        },\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n    },\r\n\r\n    data1: canvas => {\r\n        return {\r\n        labels: [\"Very High (20-25)\", \"High (15-20)\", \"Moderate (10-15)\", \"Low (0-15)\"],\r\n        datasets: [\r\n            {\r\n            label: \"Stress count by score in the past month\",\r\n            data: global_data[\"stress_pie_score\"][\"week\"],//[1, 5, 4, 7],\r\n            backgroundColor: [\r\n                \"#A91E2A\",\r\n                '#ff4242',\r\n                '#002867',\r\n                '#DCDCDC'\r\n                ],\r\n            }\r\n        ],\r\n        }\r\n    },\r\n\r\n    data2: canvas => {\r\n        return {\r\n        labels: [\"Very High (20-25)\", \"High (15-20)\", \"Moderate (10-15)\", \"Low (0-15)\"],\r\n        datasets: [\r\n            {\r\n            label: \"Stress count by score in the past month\",\r\n            data: global_data[\"stress_pie_score\"][\"month\"],//[3, 25, 61, 15],\r\n            backgroundColor: [\r\n                \"#A91E2A\",\r\n                '#ff4242',\r\n                '#002867',\r\n                '#DCDCDC'\r\n                ],\r\n            }\r\n        ],\r\n        innerWidth: 100,\r\n        }\r\n    }\r\n}\r\n\r\nlet chartExample4 = {\r\n  options: {\r\n    legend: {\r\n    display: true,\r\n    position: \"bottom\",\r\n    labels: {\r\n        usePointStyle: true,\r\n        padding: 20\r\n    }\r\n    },\r\n    tooltips: {\r\n        callbacks: {\r\n            label: function(item, data) {\r\n                return data.labels[item.index] + \": \" + data.datasets[item.datasetIndex].data[item.index];\r\n            }\r\n    }\r\n    },\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n  },\r\n\r\n  data1: canvas => {\r\n      return {\r\n      labels: [\"Work (Admin)\", \"Work (Field)\" , \"Social\", \"Family\", \"Financial\"],\r\n      datasets: [\r\n          {\r\n          label: \"Stress count by category in the past month\",\r\n          data: global_data[\"stress_pie_type\"][\"week\"],//[2, 4, 1, 2, 3],\r\n          backgroundColor: [\r\n            \"#0dd406\",\r\n            '#A91E2A',\r\n            '#002867',\r\n            '#DCDCDC',\r\n            '#FEB300',\r\n            // \"#f79216\",\r\n            ],\r\n          }\r\n      ]\r\n      }\r\n  },\r\n\r\n  data2: canvas => {\r\n      return {\r\n      labels: [\"Work (Admin)\", \"Work (Field)\" , \"Social\", \"Family\", \"Financial\"],\r\n      datasets: [\r\n          {\r\n          label: \"Stress count by category in the past month\",\r\n          data: global_data[\"stress_pie_type\"][\"month\"],//[7, 13, 10, 5, 15],\r\n          backgroundColor: [\r\n            \"#0dd406\",\r\n            '#A91E2A',\r\n            '#002867',\r\n            '#DCDCDC',\r\n            '#FEB300',\r\n            // \"#f79216\",\r\n            ],\r\n          }\r\n      ]\r\n      }\r\n    }\r\n  }\r\n\r\nlet chartExample5 = {\r\n  options: {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            color: colors.gray[900],\r\n            zeroLineColor: colors.gray[900]\r\n          },\r\n          ticks: {\r\n            callback: function(value) {\r\n              return value;\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function(item, data) {\r\n          var label = data.datasets[item.datasetIndex].label || \"\";\r\n          var yLabel = item.yLabel;\r\n          var content = \"\";\r\n\r\n          if (data.datasets.length > 1) {\r\n            content += label;\r\n          }\r\n\r\n          // content += '$' + yLabel + 'k';\r\n          content += yLabel;\r\n          return content;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  data1: canvas => {//sleep score by week\r\n    return {\r\n      labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\r\n      datasets: [\r\n        {\r\n          label: \"Sleep by Week\",\r\n          data: global_data[\"sleep\"][\"week\"][\"total\"],//[6.6, 6.7, 7.5, 7.2, 7.9, 6.8, 6.9]\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  data2: canvas => {//sleep score by month\r\n    return {\r\n      labels: [\"1st\", \"2nd\", \"4th\", \"6th\", \"8th\", \"10th\", \"12th\", \"14th\", \"16th\", \"18th\", \"20th\", \"22nd\", \"24th\", \"26th\", \"28th\", \"30th\"],\r\n      datasets: [\r\n        {\r\n          label: \"Sleep by Month\",\r\n          data: global_data[\"sleep\"][\"month\"][\"total\"],//[7.5, 6.9, 7.2, 8, 8.1, 6.1, 6.4, 6.9, 7, 8, 7.6, 7.7, 8.1, 6.9, 7.3, 7.5]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n};\r\n  \r\n  // Example 2 of Chart inside src/views/Index.js (Total orders - Card)\r\nlet chartExample6 = {\r\noptions: {\r\n    scales: {\r\n    yAxes: [\r\n        {\r\n        ticks: {\r\n            callback: function(value) {\r\n            if (!(value % 5)) {\r\n                //return '$' + value + 'k'\r\n                return value;\r\n            }\r\n            }\r\n        },\r\n        stacked: true,\r\n        }\r\n    ],\r\n    xAxes: [{\r\n      stacked: true,\r\n    }]\r\n    },\r\n    tooltips: {\r\n        callbacks: {\r\n            label: function(item, data) {\r\n            var label = data.datasets[item.datasetIndex].label || \"\";\r\n            var yLabel = item.yLabel;\r\n            var content = \"\";\r\n            if (data.datasets.length > 1) {\r\n                content += label;\r\n            }\r\n            content += \" \" + yLabel;\r\n            return content;\r\n            }\r\n    }\r\n    }\r\n},\r\ndata1: canvas => {\r\n    return {\r\n    labels: [\"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\", \"Sun\"],\r\n    datasets: [\r\n        {\r\n            label: \"Stress Management Activites Minutes\",\r\n            data: global_data[\"stress_management\"][\"week\"],//[13, 25, 41, 15, 35, 21, 28],\r\n        }\r\n    ]\r\n    };\r\n},\r\ndata2: canvas => {\r\n    return {  \r\n    labels: [\"Week 1\", \"Week 2\", \"Week 3\", \"Week 4\"],\r\n    datasets: [\r\n        {\r\n            label: \"Stress Management Activites Minutes\",\r\n            data: global_data[\"stress_management\"][\"month\"]//[13, 25, 21, 28],\r\n        }\r\n    ]\r\n    };\r\n}\r\n};\r\n\r\nlet chartExample7 = {\r\n    options: {\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                ticks: {\r\n                    callback: function(value) {\r\n                        return value;\r\n                    }\r\n                },\r\n                stacked: true,\r\n                }\r\n            ],\r\n            xAxes: [{\r\n              stacked: true,\r\n            }]\r\n        },\r\n        tooltips: {\r\n            callbacks: {\r\n                label: function(item, data) {\r\n                    return data.datasets[item.datasetIndex].data[item.index];\r\n                }\r\n            }\r\n        },\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n    },\r\n\r\n    data1: canvas => {\r\n        return {\r\n        labels: [\"Very High (20-25)\", \"High (15-20)\", \"Moderate (10-15)\", \"Low (0-10)\"],\r\n        datasets: [\r\n            {\r\n            label: \"Stress count by score in the past month\",\r\n            data: global_data[\"stress_bar_score\"][\"week\"],//[1, 5, 4, 7],\r\n            backgroundColor: [\r\n              \"#A91E2A\",\r\n              '#ff4242',\r\n              '#002867',\r\n              '#DCDCDC'\r\n              ],\r\n            }\r\n        ],\r\n        }\r\n    },\r\n\r\n    data2: canvas => {\r\n        return {\r\n        labels: [\"Very High (20-25)\", \"High (15-20)\", \"Moderate (10-15)\", \"Low (0-10)\"],\r\n        datasets: [\r\n            {\r\n            label: \"Stress count by score in the past month\",\r\n            data: global_data[\"stress_bar_score\"][\"month\"],//[3, 25, 61, 15],\r\n            backgroundColor: [\r\n              \"#A91E2A\",\r\n              '#ff4242',\r\n              '#002867',\r\n              '#DCDCDC'\r\n              ],\r\n            }\r\n        ],\r\n        innerWidth: 100,\r\n        }\r\n    }\r\n}\r\n\r\nlet chartExample8 = {\r\n  options: {\r\n    scales: {\r\n        yAxes: [\r\n            {\r\n            ticks: {\r\n                callback: function(value) {\r\n                if (!(value % 1)) {\r\n                    return value;\r\n                }\r\n                }\r\n            },\r\n            stacked: true,\r\n            }\r\n        ],\r\n        xAxes: [{\r\n          stacked: true,\r\n        }]\r\n        },\r\n    tooltips: {\r\n        callbacks: {\r\n            label: function(item, data) {\r\n                return data.datasets[item.datasetIndex].data[item.index];\r\n            }\r\n    }\r\n    },\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n  },\r\n\r\n  data1: canvas => {\r\n      return {\r\n      labels: [\"Work (Admin)\", \"Work (Field)\" , \"Social\", \"Family\", \"Financial\"],\r\n      datasets: [\r\n          {\r\n          label: \"Stress count by category in the past month\",\r\n          data: global_data[\"stress_bar_type\"][\"week\"],//[2, 4, 1, 2, 3],\r\n          backgroundColor: [\r\n            \"#0dd406\",\r\n            '#A91E2A',\r\n            '#002867',\r\n            '#FEB300',\r\n            '#DCDCDC',\r\n            ],\r\n          }\r\n      ]\r\n      }\r\n  },\r\n\r\n  data2: canvas => {\r\n      return {\r\n      labels: [\"Work (Admin)\", \"Work (Field)\" , \"Social\", \"Family\", \"Financial\"],\r\n      datasets: [\r\n          {\r\n          label: \"Stress count by category in the past month\",\r\n          data: global_data[\"stress_bar_type\"][\"month\"],//[7, 13, 10, 5, 15],\r\n          backgroundColor: [\r\n              \"#0dd406\",\r\n              '#A91E2A',\r\n              '#002867',\r\n              '#FEB300',\r\n              '#DCDCDC',\r\n              ],\r\n          }\r\n      ]\r\n      }\r\n    }\r\n  }\r\n\r\nexport {\r\n  chartExample1, \r\n  chartExample2, \r\n  chartExample3, \r\n  chartExample4, \r\n  chartExample5, \r\n  chartExample6, \r\n  chartExample7, \r\n  chartExample8\r\n}","export const fetchedChartsData = () => {\r\n    return {\r\n        type: \"FETCHED_CHARTS_DATA\"\r\n    }\r\n}\r\n\r\nexport const addOveralls = (data) => {\r\n    return {\r\n        type:  \"ADD_OVERALLS\",\r\n        overalls: data\r\n    }\r\n}","import React, { Component } from 'react';\r\n// javascipt plugin for creating charts\r\nimport Chart from \"chart.js\";\r\n// react plugin used to create charts\r\nimport { Line, Bar, Pie } from \"react-chartjs-2\";\r\n// node.js library that concatenates classes (strings)\r\nimport classnames from \"classnames\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    NavItem,\r\n    NavLink,\r\n    Nav,\r\n    Row,\r\n    Col,\r\n    Spinner,\r\n  } from \"reactstrap\";\r\n\r\nimport {\r\n    chartOptions,\r\n    parseOptions,\r\n} from \"variables/charts.js\";\r\n\r\nimport {\r\n  chartExample1,\r\n  chartExample2,\r\n  chartExample3,\r\n  chartExample4,\r\n} from \"variables/charts_data.js\"\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nclass Graphs extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        activeNav1: 1,\r\n        activeNav2: 1,\r\n        activeNav3: 1,\r\n        activeNav4: 1,\r\n        chartExample1Data: \"data1\",\r\n        chartExample2Data: \"data1\",\r\n        chartExample3Data: \"data1\",\r\n        chartExample4Data: \"data1\",\r\n      };\r\n      if (window.Chart) {\r\n        parseOptions(Chart, chartOptions());\r\n      }\r\n    }\r\n\r\n    toggleNavs = (e, row, col, data) => {\r\n      e.preventDefault();\r\n      if (row == 1) {\r\n        if (col == 1){ //stress\r\n          this.setState({\r\n            activeNav1: data\r\n          });\r\n          if (data == 1){\r\n            this.setState({\r\n              chartExample1Data:\r\n                this.state.chartExample1Data = \"data1\"\r\n            });\r\n          }\r\n          else if (data == 2){\r\n            this.setState({\r\n              chartExample1Data:\r\n                this.state.chartExample1Data = \"data2\"\r\n            });\r\n          }\r\n          else{\r\n            this.setState({\r\n              chartExample1Data:\r\n                this.state.chartExample1Data = \"data3\"\r\n            });\r\n          }\r\n        }\r\n        else{ //sleep\r\n          this.setState({\r\n            activeNav2: data\r\n          });\r\n          if (data == 1){\r\n            this.setState({\r\n              chartExample2Data:\r\n                this.state.chartExample2Data = \"data1\"\r\n            });\r\n          }\r\n          else {\r\n            this.setState({\r\n              chartExample2Data:\r\n                this.state.chartExample2Data = \"data2\"\r\n            });\r\n          }\r\n        }\r\n      }\r\n      else{\r\n        if (col == 1){\r\n          this.setState({\r\n            activeNav3: data\r\n          });\r\n          if (data == 1){\r\n            this.setState({\r\n              chartExample3Data:\r\n                this.state.chartExample3Data = \"data1\"\r\n            });\r\n          }\r\n          else {\r\n            this.setState({\r\n              chartExample3Data:\r\n                this.state.chartExample3Data = \"data2\"\r\n            });\r\n          }\r\n        }\r\n        else {\r\n          this.setState({\r\n            activeNav4: data\r\n          });\r\n          if (data == 1){\r\n            this.setState({\r\n              chartExample4Data:\r\n                this.state.chartExample4Data = \"data1\"\r\n            });\r\n          }\r\n          else {\r\n            this.setState({\r\n              chartExample4Data:\r\n                this.state.chartExample4Data = \"data2\"\r\n            });\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <>\r\n          { !this.props.fetchedInitial &&\r\n            <div className=\"loading-spinner\">\r\n              <Spinner style={{width: '5rem', height: '5rem'}} color=\"primary\" size='lg'/>\r\n            </div>\r\n          }\r\n          <Row>\r\n              <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\r\n              <Card className=\"bg-gradient-default shadow\">\r\n                  <CardHeader className=\"bg-transparent\">\r\n                  <Row className=\"align-items-center\">\r\n                      <div className=\"col\">\r\n                      <h6 className=\"text-uppercase text-light ls-1 mb-1\">\r\n                          Overview\r\n                      </h6>\r\n                      <h2 className=\"text-white mb-0\">Stress Score</h2>\r\n                      </div>\r\n                      <div className=\"col\">\r\n                      <Nav className=\"justify-content-end\" pills>\r\n                          <NavItem>\r\n                          <NavLink\r\n                              className={classnames(\"py-2 px-3\", {\r\n                              active: this.state.activeNav1 === 1\r\n                              })}\r\n                              href=\"#pablo\"\r\n                              onClick={e => this.toggleNavs(e, 1, 1, 1)}\r\n                          >\r\n                              <span className=\"d-none d-md-block\">Day</span>\r\n                              <span className=\"d-md-none\">D</span>\r\n                          </NavLink>\r\n                          </NavItem>\r\n                          <NavItem>\r\n                          <NavLink\r\n                              className={classnames(\"py-2 px-3\", {\r\n                              active: this.state.activeNav1 === 2\r\n                              })}\r\n                              data-toggle=\"tab\"\r\n                              href=\"#pablo\"\r\n                              onClick={e => this.toggleNavs(e, 1, 1, 2)}\r\n                          >\r\n                              <span className=\"d-none d-md-block\">Week</span>\r\n                              <span className=\"d-md-none\">W</span>\r\n                          </NavLink>\r\n                          </NavItem>\r\n                          <NavItem>\r\n                          <NavLink\r\n                              className={classnames(\"py-2 px-3\", {\r\n                              active: this.state.activeNav1 === 3\r\n                              })}\r\n                              href=\"#pablo\"\r\n                              onClick={e => this.toggleNavs(e, 1, 1, 3)}\r\n                          >\r\n                              <span className=\"d-none d-md-block\">Month</span>\r\n                              <span className=\"d-md-none\">M</span>\r\n                          </NavLink>\r\n                          </NavItem>\r\n                      </Nav>\r\n                      </div>\r\n                  </Row>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                  {/* Chart */}\r\n                  <div className=\"chart\">\r\n                      <Line\r\n                      data={chartExample1[this.state.chartExample1Data]}\r\n                      options={chartExample1.options}\r\n                      getDatasetAtEvent={e => console.log(e)}\r\n                      />\r\n                  </div>\r\n                  </CardBody>\r\n              </Card>\r\n              </Col>\r\n              <Col xl=\"4\">\r\n              <Card className=\"shadow\">\r\n                  <CardHeader className=\"bg-transparent\">\r\n                  <Row className=\"align-items-center\">\r\n                      <div className=\"col\">\r\n                      <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\r\n                          Overview\r\n                      </h6>\r\n                      <h2 className=\"mb-0\">Sleep</h2>\r\n                      </div>\r\n                      <div>\r\n                      <Nav className=\"justify-content-end\" pills>\r\n                          <NavItem>\r\n                          <NavLink\r\n                              className={classnames(\"py-2 px-3\", {\r\n                              active: this.state.activeNav2 === 1\r\n                              })}\r\n                              href=\"#pablo\"\r\n                              onClick={e => this.toggleNavs(e, 1, 2, 1)}\r\n                              >\r\n                              <span className=\"d-none d-md-block\">Week</span>\r\n                              <span className=\"d-md-none\">W</span>\r\n                          </NavLink>\r\n                          </NavItem>\r\n                          <NavItem>\r\n                          <NavLink\r\n                              className={classnames(\"py-2 px-3\", {\r\n                              active: this.state.activeNav2 === 2\r\n                              })}\r\n                              href=\"#pablo\"\r\n                              onClick={e => this.toggleNavs(e, 1, 2, 2)}\r\n                              >\r\n                              <span className=\"d-none d-md-block\">Month</span>\r\n                              <span className=\"d-md-none\">M</span>\r\n                          </NavLink>\r\n                          </NavItem>\r\n                      </Nav>\r\n                      </div>\r\n                  </Row>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                  {/* Chart */}\r\n                  <div className=\"chart\">\r\n                      <Bar\r\n                      data={chartExample2[this.state.chartExample2Data]}\r\n                      options={chartExample2.options}\r\n                      getDatasetAtEvent={e => console.log(e)}\r\n                      />\r\n                  </div>\r\n                  </CardBody>\r\n              </Card>\r\n              </Col>\r\n          </Row>\r\n          {/*Second Row */}\r\n          <Row className=\"mt-5\">\r\n            <Col className=\"mb-5 mb-xl-0\" xl=\"6\">\r\n              <Card className=\"shadow\">\r\n              <CardHeader className=\"bg-transparent\">\r\n                  <Row className=\"align-items-center\">\r\n                    <div className=\"col\">\r\n                    <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\r\n                      Overview\r\n                    </h6>\r\n                    <h2 className=\"mb-0\">Stress Breakdown (by score)</h2>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                    <Nav className=\"justify-content-end\" pills>\r\n                        <NavItem>\r\n                        <NavLink\r\n                            className={classnames(\"py-2 px-3\", {\r\n                            active: this.state.activeNav3 === 1\r\n                            })}\r\n                            href=\"#pablo\"\r\n                            onClick={e => this.toggleNavs(e, 2, 1, 1)}\r\n                            // onClick={e => e.preventDefault()}\r\n                            >\r\n                            <span className=\"d-none d-md-block\">Week</span>\r\n                            <span className=\"d-md-none\">W</span>\r\n                        </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                        <NavLink\r\n                            className={classnames(\"py-2 px-3\", {\r\n                            active: this.state.activeNav3 === 2\r\n                            })}\r\n                            href=\"#pablo\"\r\n                            onClick={e => this.toggleNavs(e, 2, 1, 2)}\r\n                            // onClick={e => e.preventDefault()}\r\n                            >\r\n                            <span className=\"d-none d-md-block\">Month</span>\r\n                            <span className=\"d-md-none\">M</span>\r\n                        </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    </div>\r\n                  </Row>\r\n              </CardHeader>\r\n              <CardBody>\r\n                {/* Chart */}\r\n                <div className=\"chart\">\r\n                    <Pie\r\n                    data={chartExample3[this.state.chartExample3Data]}\r\n                    options={chartExample3.options}\r\n                    getDatasetAtEvent={e => console.log(e)}\r\n                    />\r\n                </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col className=\"mb-5 mb-xl-0\" xl=\"6\">\r\n              <Card className=\"shadow\">\r\n              <CardHeader className=\"bg-transparent\">\r\n                  <Row className=\"align-items-center\">\r\n                    <div className=\"col\">\r\n                    <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\r\n                      Overview\r\n                    </h6>\r\n                    <h2 className=\"mb-0\">Stress Breakdown (by type)</h2>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                    <Nav className=\"justify-content-end\" pills>\r\n                        <NavItem>\r\n                        <NavLink\r\n                            className={classnames(\"py-2 px-3\", {\r\n                            active: this.state.activeNav4 === 1\r\n                            })}\r\n                            href=\"#pablo\"\r\n                            onClick={e => this.toggleNavs(e, 2, 2, 1)}\r\n                            // onClick={e => e.preventDefault()}\r\n                            >\r\n                            <span className=\"d-none d-md-block\">Week</span>\r\n                            <span className=\"d-md-none\">W</span>\r\n                        </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                        <NavLink\r\n                            className={classnames(\"py-2 px-3\", {\r\n                            active: this.state.activeNav4 === 2\r\n                            })}\r\n                            href=\"#pablo\"\r\n                            onClick={e => this.toggleNavs(e, 2, 2, 2)}\r\n                            // onClick={e => e.preventDefault()}\r\n                            >\r\n                            <span className=\"d-none d-md-block\">Month</span>\r\n                            <span className=\"d-md-none\">M</span>\r\n                        </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    </div>\r\n                  </Row>\r\n              </CardHeader>\r\n              <CardBody>\r\n                {/* Chart */}\r\n                <div className=\"chart\">\r\n                    <Pie\r\n                    data={chartExample4[this.state.chartExample4Data]}\r\n                    options={chartExample4.options}\r\n                    getDatasetAtEvent={e => console.log(e)}\r\n                    />\r\n                </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    fetchedInitial: state.charts.fetchedChartsData,\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n)(Graphs)","import React from \"react\";\n\nimport {\n  Button,\n  Card,\n  CardHeader,\n  Table,\n  Container,\n  Row,\n  Col,\n  Input,\n  UncontrolledTooltip,\n} from \"reactstrap\";\n\nimport Header from \"components/Headers/Header.js\";\nimport Graphs from \"./graphs.js\"\n\nconst firebase = require(\"firebase/app\");\nrequire(\"firebase/firestore\");\n\nclass Index extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      stressIncidents: [],\n      dateSort: true,\n      stressSort: true,\n      showTextBox: Array(6).fill(false),\n    }\n  }\n\n  componentDidMount() {\n    const email = localStorage.getItem(\"email\")\n    let db = firebase.firestore();\n\n    let docRef = db.collection(\"users\").doc(email).collection(\"stress_incidents\").orderBy(\"index\")\n    docRef.get().then((doc) => {\n      var data = doc.docs.map(d => d.data())\n      this.setState({\n        stressIncidents: data,\n      })\n    })\n  }\n\n  onDateToggle(e){\n    e.preventDefault();\n    let sort = !this.state.dateSort;\n    this.setState({\n      dateSort: !this.state.dateSort,\n      stressIncidents: sort ?\n        this.state.stressIncidents.sort(function (a, b) {\n          a = a.date.split('/');\n          b = b.date.split('/');\n          return b[2] - a[2] || b[0] - a[0] || b[1] - a[1];\n        }) : this.state.stressIncidents.sort(function (a, b) {\n          a = a.date.split('/');\n          b = b.date.split('/');\n          return a[2] - b[2] || a[0] - b[0] || a[1] - b[1];\n        })\n    });\n  }\n\n  onStressToggle(e){\n    e.preventDefault();\n    let sort = !this.state.stressSort;\n    this.setState({\n      stressSort: !this.state.stressSort,\n      stressIncidents: sort ? \n        this.state.stressIncidents.sort((a,b) => b.stress_score - a.stress_score) : this.state.stressIncidents.sort((a,b) => a.stress_score - b.stress_score),\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Graphs />\n          <Row className=\"mt-5\">\n            <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Recent High Stress Incidents</h3>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\"><Button>Reason</Button></th>\n                      <th scopr=\"col\"><Button onClick={e => this.onStressToggle(e)}>Stress Score</Button></th>\n                      <th scope=\"col\"><Button onClick={e => this.onDateToggle(e)}>Date</Button></th>\n                      <th scope=\"col\"><Button>Time</Button></th>\n                      <th scope=\"col\"><Button>Description</Button></th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.stressIncidents.map(incident => \n                      <tr>\n                        <td key={String(incident.index)+String(incident.index)}>\n                          <Input \n                            type=\"select\" \n                            defaultValue={incident.reason}\n                            onChange={(e) => console.log(`stress reason changed to ${e.target.value}`)}\n                          >\n                            <option>Work</option>\n                            <option>Social</option>\n                            <option>Money</option>\n                            <option>Family</option>\n                            <option>Other</option>\n                          </Input>\n                        </td>\n                        <td>{incident.stress}</td>\n                        <td>{incident.date}</td>\n                        <td>{incident.time}</td>\n                        <td key={incident.index}>\n                          <Input type=\"textarea\"\n                            defaultValue={`${incident.description} on ${incident.date}`}\n                            id={'Box'+incident.index}\n                            plaintext={!this.state.showTextBox[incident.index]}\n                            onDoubleClick={(e) => {\n                              e.preventDefault();\n                              this.state.showTextBox[incident.index] = true; \n                              this.forceUpdate();\n                            }}\n                          />\n                          <UncontrolledTooltip delay={0} placement='right' trigger=\"hover focus\" target={'Box'+incident.index}>\n                            Double Click Me to Edit!\n                          </UncontrolledTooltip>                          \n                          {\n                            this.state.showTextBox[incident.index] && \n                            <Button\n                              color='default'\n                              size=\"sm\"\n                              onClick={(e) => {\n                                e.preventDefault();\n                                this.state.showTextBox[incident.index] = false;\n                                this.forceUpdate();\n                              }}\n                            >Save</Button>\n                          }\n                        </td>\n                      </tr>\n                      )}\n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Index;","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\n\nclass UserHeader extends React.Component {\n  render() {\n    return (\n      <>\n        <div\n          className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\n          style={{\n            minHeight: \"600px\",\n            backgroundImage:\n              \"url(\" + require(\"assets/img/theme/profile_background.jpeg\") + \")\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center top\"\n          }}\n        >\n          {/* Mask */}\n          <span className=\"mask bg-gradient-default opacity-8\" />\n          {/* Header container */}\n          <Container className=\"d-flex align-items-center\" fluid>\n            <Row>\n              <Col lg=\"7\" md=\"10\">\n                <h1 className=\"display-2 text-white\">Hello Param</h1>\n                <p className=\"text-white mt-0 mb-5\">\n                  This is your profile page. You can see the progress you've\n                  made with your work and manage your projects or assigned tasks\n                </p>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserHeader;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/UserHeader.js\";\n\nclass Profile extends React.Component {\n  render() {\n    return (\n      <>\n        <UserHeader />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\n              <Card className=\"card-profile shadow\">\n                <Row className=\"justify-content-center\">\n                  <Col className=\"order-lg-2\" lg=\"3\">\n                    <div className=\"card-profile-image\">\n                      <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                        <img\n                          alt=\"...\"\n                          className=\"rounded-circle\"\n                          src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                        />\n                      </a>\n                    </div>\n                  </Col>\n                </Row>\n                <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\n                  <div className=\"d-flex justify-content-between\">\n                    {/* <Button\n                      className=\"mr-4\"\n                      color=\"info\"\n                      href=\"#pablo\"\n                      onClick={e => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      Connect\n                    </Button>\n                    <Button\n                      className=\"float-right\"\n                      color=\"default\"\n                      href=\"#pablo\"\n                      onClick={e => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      Message\n                    </Button> */}\n                  </div>\n                </CardHeader>\n                <CardBody className=\"pt-0 pt-md-4\">\n                  <Row>\n                    <div className=\"col\">\n                      <div className=\"card-profile-stats d-flex justify-content-center mt-md-5\">\n                        {/* <div>\n                          <span className=\"heading\">22</span>\n                          <span className=\"description\">Friends</span>\n                        </div>\n                        <div>\n                          <span className=\"heading\">10</span>\n                          <span className=\"description\">Photos</span>\n                        </div>\n                        <div>\n                          <span className=\"heading\">89</span>\n                          <span className=\"description\">Comments</span>\n                        </div> */}\n                      </div>\n                    </div>\n                  </Row>\n                  <div className=\"text-center\">\n                    <h3>\n                      Your Name\n                      <span className=\"font-weight-light\">, 19</span>\n                    </h3>\n                    <div className=\"h5 font-weight-300\">\n                      <i className=\"ni location_pin mr-2\" />\n                      Los Angeles, United States\n                    </div>\n                    <div className=\"h5 mt-4\">\n                      <i className=\"ni business_briefcase-24 mr-2\" />\n                      Your Work Title\n                    </div>\n                    <div>\n                      <i className=\"ni education_hat mr-2\" />\n                      University of California, Los Angeles\n                    </div>\n                    {/* <hr className=\"my-4\" />\n                    <p>\n                      Ryan — the name taken by Melbourne-raised, Brooklyn-based\n                      Nick Murphy — writes, performs and records all of his own\n                      music.\n                    </p>\n                    <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                      Show more\n                    </a> */}\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col className=\"order-xl-1\" xl=\"8\">\n              <Card className=\"bg-secondary shadow\">\n                <CardHeader className=\"bg-white border-0\">\n                  <Row className=\"align-items-center\">\n                    <Col xs=\"8\">\n                      <h3 className=\"mb-0\">My account</h3>\n                    </Col>\n                    <Col className=\"text-right\" xs=\"4\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        Save\n                      </Button>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      User information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-username\"\n                            >\n                              Username\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-username\"\n                              placeholder=\"Username\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-email\"\n                            >\n                              Email address\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-email\"\n                              placeholder=\"example@example.com\"\n                              type=\"email\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-first-name\"\n                            >\n                              First name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-first-name\"\n                              placeholder=\"First name\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-last-name\"\n                            >\n                              Last name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-last-name\"\n                              placeholder=\"Last name\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    {/* Address */}\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Contact information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-address\"\n                            >\n                              Address\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-address\"\n                              placeholder=\"Home Address\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-city\"\n                            >\n                              City\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-city\"\n                              placeholder=\"City\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Country\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-country\"\n                              placeholder=\"Country\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Postal code\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-postal-code\"\n                              placeholder=\"Postal code\"\n                              type=\"number\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    {/* Description */}\n                    <h6 className=\"heading-small text-muted mb-4\">About me</h6>\n                    <div className=\"pl-lg-4\">\n                      <FormGroup>\n                        <label>About Me</label>\n                        <Input\n                          className=\"form-control-alternative\"\n                          placeholder=\"A few words about you ...\"\n                          rows=\"4\"\n                          type=\"textarea\"\n                        />\n                      </FormGroup>\n                    </div>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Profile;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Modal,\n  Alert,\n  Row,\n  Col\n} from \"reactstrap\";\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\"\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      invalid_credentials: false,\n      account_created: false,\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: '',\n      showSpinner: false,\n      email_already_in_use: false,\n    }\n\n    this.tryGoogleSignIn = this.tryGoogleSignIn.bind(this)\n    this.authListener = () => {return;};\n  }\n\n  componentDidMount() {\n    window.scrollTo(0,0);\n    this.authListener = firebase.auth().onAuthStateChanged(async (user) => {\n      await this.onAuthHandler(user);\n    });\n  }\n\n  onAuthHandler(user) {\n    if (user) {\n      console.log(user)\n      localStorage.setItem(\"email\", user.email)\n      this.setState({\n        account_created: true,\n      })\n    }\n  }\n\n  tryCreateAccount(email, password, first_name, last_name) {\n    if( !email|| !password || !first_name || !last_name ) {\n      this.setState({\n        invalid_credentials: true\n      })\n    }\n\n    else {\n      this.setState({\n        showSpinner: true\n      })\n\n      firebase.auth().createUserWithEmailAndPassword(email, password)\n      .then(() => {\n        // want to do user ops here, but no way to consistently query UID outside of auth handler\n        this.setState({\n          invalid_credentials: false,\n          account_created: true,\n          showSpinner: false\n        })\n        localStorage.setItem('loggedIn', true)\n        console.log('User Created!');\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        if (error.code == \"auth/email-already-in-use\") {\n          this.setState({\n            email_already_in_use: true,\n            showSpinner: false\n          })\n        }\n\n        else {\n          this.setState({\n            invalid_credentials: true,\n            showSpinner: false,\n          })\n        }\n        console.error(`Error code: ${error.code}. Error message: ${error.message}`)\n      });\n    }\n  }\n\n  tryGoogleSignIn() {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    \n    firebase.auth().signInWithPopup(provider)\n    .then(function(result) {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      var token = result.credential.accessToken;\n      // The signed-in user info.\n      var user = result.user;\n      // ...\n      console.log(\"token =\", token, \"user =\", user)\n    })\n    .catch(function(error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      // ...\n      console.log(\"Error with error code =\", errorCode, \"and error message =\", errorMessage)\n    });\n  }\n\n  tryFacebookSignIn() {\n    var provider = new firebase.auth.FacebookAuthProvider();\n\n    firebase.auth().signInWithPopup(provider)\n    .then(function(result) {\n      // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n      var token = result.credential.accessToken;\n      // The signed-in user info.\n      var user = result.user;\n      // ...\n      console.log(\"email =\", user.email, \"name =\", user.displayName)\n    })\n    .catch(function(error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      this.setState({\n        invalid_credentials: true,\n      })\n      console.log(\"Error with error code =\", errorCode, \"and error message =\", errorMessage)\n    });\n  }\n\n  tryLogInUser(email, password) {\n    this.setState({\n      showSpinner: true,\n    })\n\n    firebase.auth().signInWithEmailAndPassword(email, password)\n    .then(() => {\n      this.setState({ \n        invalid_credentials: false,\n        account_created: true,\n        email: '',\n        password: '',\n        showSpinner: false\n      });\n      localStorage.setItem('loggedIn', true);\n      localStorage.setItem('email', email);\n    })\n    .catch((error) => {\n      // Handle Errors here.\n      this.setState({ \n        invalid_credentials: true,\n        showSpinner: false,\n      });\n      console.error(`Error code: ${error.code}. Error message: ${error.message}`)\n    });\n  }\n\n  render() {\n    if (this.state.account_created) {\n      localStorage.setItem('loggedIn', true)\n      return <Redirect push to=\"/admin/index\" />\n    }\n\n    return (\n      <>\n        <Modal style={{opacity: \"0%\"}} isOpen={this.state.showSpinner} />\n        <Col lg=\"5\" md=\"8\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent pb-5\">\n              <div className=\"text-muted text-center mt-2 mb-4\">\n                <small>Sign up with</small>\n              </div>\n              <div className=\"text-center\">\n                <Button\n                  className=\"btn-neutral btn-icon mr-4\"\n                  color=\"default\"\n                  href=\"#pablo\"\n                  onClick={() => this.tryFacebookSignIn()}\n                >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/icons/common/facebook.svg\")}\n                    />\n                  </span>\n                  <span className=\"btn-inner--text\">Facebook</span>\n                </Button>\n                <Button\n                  className=\"btn-neutral btn-icon\"\n                  color=\"default\"\n                  href=\"#pablo\"\n                  onClick={() => this.tryGoogleSignIn()}\n                >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/icons/common/google.svg\")}\n                    />\n                  </span>\n                  <span className=\"btn-inner--text\">Google</span>\n                </Button>\n              </div>\n            </CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-5\">\n              <div className=\"text-center text-muted mb-4\">\n                <small>Or sign up with credentials</small>\n              </div>\n              <div className=\"text-center text-muted mb-4\">\n                <small>To view the model website, <Button style={{boxShadow: \"none\"}} className=\"px-0\" onClick={() => this.tryLogInUser('model@model.com','123456789')}>click here</Button></small>\n              </div>\n              {\n                this.state.invalid_credentials && \n                <div className=\"text-center text-muted mb-4\">\n                  <Alert color=\"danger\">Please check your email and password and try again!</Alert>\n                </div>\n              }\n              {\n                this.state.email_already_in_use && \n                <div className=\"text-center text-muted mb-4\">\n                  <Alert color=\"danger\">This email is already in use. Please login instead!</Alert>\n                </div>\n              }\n              <Form role=\"form\">\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative mb-3\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-hat-3\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"First Name\" type=\"text\" value={this.state.first_name} onChange={(e) => this.setState({first_name: e.target.value})}/>\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative mb-3\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-hat-3\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Last Name\" type=\"text\" value={this.state.last_name} onChange={(e) => this.setState({last_name: e.target.value})}/>\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative mb-3\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-email-83\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Email\" type=\"email\" autoComplete=\"new-email\" value={this.state.email} onChange={(e) => this.setState({email: e.target.value})}/>\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-lock-circle-open\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Password\" type=\"password\" autoComplete=\"new-password\" value={this.state.password} onChange={(e) => this.setState({password: e.target.value})}/>\n                  </InputGroup>\n                </FormGroup>\n                {/* <div className=\"text-muted font-italic\">\n                  <small>\n                    password strength:{\" \"}\n                    <span className=\"text-success font-weight-700\">strong</span>\n                  </small>\n                </div> */}\n                {/* <Row className=\"my-4\">\n                  <Col xs=\"12\">\n                    <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                      <input\n                        className=\"custom-control-input\"\n                        id=\"customCheckRegister\"\n                        type=\"checkbox\"\n                      />\n                      <label\n                        className=\"custom-control-label\"\n                        htmlFor=\"customCheckRegister\"\n                      >\n                        <span className=\"text-muted\">\n                          I agree with the{\" \"}\n                          <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                            Privacy Policy\n                          </a>\n                        </span>\n                      </label>\n                    </div>\n                  </Col>\n                </Row> */}\n                <div className=\"text-center\">\n                  <Button className=\"mt-4\" color=\"primary\" type=\"button\" onClick={() => {\n                    this.tryCreateAccount(this.state.email, this.state.password, this.state.first_name, this.state.last_name)}}\n                  >\n                    Create account\n                  </Button>\n                </div>\n              </Form>\n            </CardBody>\n          </Card>\n          <Row className=\"mt-3\">\n            <Col xs=\"6\" />\n            <Col className=\"text-right\" xs=\"6\">\n              <Link\n                className=\"text-light\"\n                to=\"/auth/login\"\n              >\n                <small>Login Instead</small>\n              </Link>\n            </Col>\n          </Row>\n        </Col>\n      </>\n    );\n  }\n}\n\nexport default Register;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n  Alert,\n  Modal,\n} from \"reactstrap\";\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      invalid_credentials: false,\n      loggedIn: false,\n      email: '',\n      password: '',\n      showSpinner: false,\n    }\n    this.authListener = () => {return;};\n  }\n\n  componentDidMount() {\n    window.scrollTo(0,0);\n    this.authListener = firebase.auth().onAuthStateChanged(async (user) => {\n      await this.onAuthHandler(user);\n    });\n  }\n\n  onAuthHandler(user) {\n    if (user) {\n      console.log(user)\n      localStorage.setItem(\"email\", user.email)\n      this.setState({\n        loggedIn: true,\n      })\n    }\n  }\n\n  tryLogInUser(email, password) {\n    \n    if (email == '' || password == '') {\n      this.setState({\n        invalid_credentials: true,\n      })\n    }\n    \n    else {\n      this.setState({\n        showSpinner: true,\n      })\n\n      firebase.auth().signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ \n          invalid_credentials: false,\n          loggedIn: true,\n          email: '',\n          password: '',\n          showSpinner: false\n        });\n        localStorage.setItem('loggedIn', true);\n        localStorage.setItem('email', email);\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        this.setState({ \n          invalid_credentials: true,\n          showSpinner: false,\n        });\n        console.error(`Error code: ${error.code}. Error message: ${error.message}`)\n      });\n    }\n  }\n\n  tryGoogleSignIn() {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    \n    firebase.auth().signInWithPopup(provider)\n    .then((result) => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      var token = result.credential.accessToken;\n      // The signed-in user info.\n      var user = result.user;\n      // ...\n      console.log(\"token =\", token, \"user =\", user)\n    })\n    .catch((error) => {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      // ...\n      console.log(\"Error with error code =\", errorCode, \"and error message =\", errorMessage)\n    });\n  }\n\n  tryFacebookSignIn() {\n    var provider = new firebase.auth.FacebookAuthProvider();\n\n    firebase.auth().signInWithPopup(provider)\n    .then((result) => {\n      // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n      var token = result.credential.accessToken;\n      // The signed-in user info.\n      var user = result.user;\n      // ...\n      console.log(\"email =\", user.email, \"name =\", user.displayName)\n    })\n    .catch((error) => {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      this.setState({\n        invalid_credentials: true,\n      })\n      console.log(\"Error with error code =\", errorCode, \"and error message =\", errorMessage)\n    });\n  }\n\n  render() {\n    if (this.state.loggedIn) {\n      localStorage.setItem('loggedIn', true);\n      return <Redirect push to=\"/admin/index\"/>\n    }\n\n    return (\n      <>\n        <Modal style={{opacity: \"0%\"}} isOpen={this.state.showSpinner} />\n        <Col lg=\"5\" md=\"7\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent pb-5\">\n              <div className=\"text-muted text-center mt-2 mb-3\">\n                <small>Sign in with</small>\n              </div>\n              <div className=\"btn-wrapper text-center\">\n                <Button\n                  className=\"btn-neutral btn-icon\"\n                  color=\"default\"\n                  href=\"#pablo\"\n                  onClick={() => this.tryFacebookSignIn()}\n                >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/icons/common/facebook.svg\")}\n                    />\n                  </span>\n                  <span className=\"btn-inner--text\">Facebook</span>\n                </Button>\n                <Button\n                  className=\"btn-neutral btn-icon\"\n                  color=\"default\"\n                  href=\"#pablo\"\n                  onClick={() => this.tryGoogleSignIn()}\n                >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/icons/common/google.svg\")}\n                    />\n                  </span>\n                  <span className=\"btn-inner--text\">Google</span>\n                </Button>\n              </div>\n            </CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-5\">\n              <div className=\"text-center text-muted mb-4\">\n                <small>Or sign in with credentials</small>\n              </div>\n              <div className=\"text-center text-muted mb-4\">\n                <small>To view the model website, <Button style={{boxShadow: \"none\"}} className=\"px-0\" onClick={() => this.tryLogInUser('paramshah09@gmail.com','123456789')}>click here</Button></small>\n              </div>\n              {\n                this.state.invalid_credentials && \n                <div className=\"text-center text-muted mb-4\">\n                  <Alert color=\"danger\">Please check your email and password and try again!</Alert>\n                </div>\n              }\n              <Form role=\"form\">\n                <FormGroup className=\"mb-3\">\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-email-83\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Email\" type=\"email\" value={this.state.email} onChange={e => this.setState({email: e.target.value})}/>\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-lock-circle-open\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Password\" type=\"password\" autoComplete=\"new-password\" value={this.state.password} onChange={e => this.setState({password: e.target.value})}/>\n                  </InputGroup>\n                </FormGroup>\n                <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                  <input\n                    className=\"custom-control-input\"\n                    id=\" customCheckLogin\"\n                    type=\"checkbox\"\n                  />\n                  <label\n                    className=\"custom-control-label\"\n                    htmlFor=\" customCheckLogin\"\n                  >\n                    <span className=\"text-muted\">Remember me</span>\n                  </label>\n                </div>\n                <div className=\"text-center\">\n                  {/* <Link\n                  className=\"nav-link-icon\"\n                  to=\"/admin/index\"\n                  > */}\n                    <Button className=\"my-4\" color=\"primary\" onClick={() => this.tryLogInUser(this.state.email, this.state.password)}>\n                    Sign In</Button>\n                  {/* </Link> */}\n                </div>\n              </Form>\n            </CardBody>\n          </Card>\n          <Row className=\"mt-3\">\n            <Col xs=\"6\">\n              <a\n                className=\"text-light\"\n                href=\"#pablo\"\n                onClick={e => e.preventDefault()}\n              >\n                <small>Forgot password?</small>\n              </a>\n            </Col>\n            <Col className=\"text-right\" xs=\"6\">\n              <Link\n                className=\"text-light\"\n                to=\"/auth/register\"\n              >\n                <small>Create new account</small>\n              </Link>\n            </Col>\n          </Row>\n        </Col>\n      </>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\r\nimport Graphs from '../graphs.js';\r\nimport Chart from \"chart.js\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport classnames from \"classnames\";\r\n\r\nimport {\r\n    chartOptions,\r\n    parseOptions,\r\n} from \"variables/charts.js\";\r\n\r\nimport {\r\n    chartExample5 as chartExample1,\r\n    chartExample6 as chartExample2,\r\n    chartExample7 as chartExample3,\r\n    chartExample8 as chartExample4,\r\n} from \"variables/charts_data.js\"\r\n\r\nimport {\r\n    Row,\r\n    Col,\r\n    Container,\r\n    NavItem,\r\n    NavLink,\r\n    Nav,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Spinner\r\n} from 'reactstrap'\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nclass Charts extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        activeNav1: 1,\r\n        activeNav2: 1,\r\n        activeNav3: 1,\r\n        activeNav4: 1,\r\n        chartExample1Data: \"data1\",\r\n        chartExample2Data: \"data1\",\r\n        chartExample3Data: \"data1\",\r\n        chartExample4Data: \"data1\",\r\n      };\r\n      if (window.Chart) {\r\n        parseOptions(Chart, chartOptions());\r\n      }\r\n    }\r\n\r\n    toggleNavs = (e, row, col, data) => {\r\n      e.preventDefault();\r\n      if (row == 1) {\r\n        if (col == 1){ //stress\r\n          this.setState({\r\n            activeNav1: data\r\n          });\r\n          if (data == 1){\r\n            this.setState({\r\n              chartExample1Data:\r\n                this.state.chartExample1Data = \"data1\"\r\n            });\r\n          }\r\n          else{\r\n            this.setState({\r\n              chartExample1Data:\r\n                this.state.chartExample1Data = \"data2\"\r\n            });\r\n          }\r\n        }\r\n        else{ //sleep\r\n          this.setState({\r\n            activeNav2: data\r\n          });\r\n          if (data == 1){\r\n            this.setState({\r\n              chartExample2Data:\r\n                this.state.chartExample2Data = \"data1\"\r\n            });\r\n          }\r\n          else {\r\n            this.setState({\r\n              chartExample2Data:\r\n                this.state.chartExample2Data = \"data2\"\r\n            });\r\n          }\r\n        }\r\n      }\r\n      else{\r\n        if (col == 1){\r\n          this.setState({\r\n            activeNav3: data\r\n          });\r\n          if (data == 1){\r\n            this.setState({\r\n              chartExample3Data:\r\n                this.state.chartExample3Data = \"data1\"\r\n            });\r\n          }\r\n          else {\r\n            this.setState({\r\n              chartExample3Data:\r\n                this.state.chartExample3Data = \"data2\"\r\n            });\r\n          }\r\n        }\r\n        else {\r\n          this.setState({\r\n            activeNav4: data\r\n          });\r\n          if (data == 1){\r\n            this.setState({\r\n              chartExample4Data:\r\n                this.state.chartExample4Data = \"data1\"\r\n            });\r\n          }\r\n          else {\r\n            this.setState({\r\n              chartExample4Data:\r\n                this.state.chartExample4Data = \"data2\"\r\n            });\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    render() {\r\n      return(\r\n        <>\r\n        <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\"/>\r\n        <Container className=\"mt--7\" fluid>\r\n            <Row>\r\n                <Col className=\"mb-5 mb-xl-0\" xl=\"5\">\r\n                <Card className=\"shadow\">\r\n                    <CardHeader className=\"bg-transparent\">\r\n                    <Row className=\"align-items-center\">\r\n                        <div className=\"col\">\r\n                        <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\r\n                            Overview\r\n                        </h6>\r\n                        <h2 className=\"mb-0\">Stress Management</h2>\r\n                        </div>\r\n                        <div>\r\n                        <Nav className=\"justify-content-end\" pills>\r\n                            <NavItem>\r\n                            <NavLink\r\n                                className={classnames(\"py-2 px-3\", {\r\n                                active: this.state.activeNav2 === 1\r\n                                })}\r\n                                href=\"#pablo\"\r\n                                onClick={e => this.toggleNavs(e, 1, 2, 1)}\r\n                                >\r\n                                <span className=\"d-none d-md-block\">Week</span>\r\n                                <span className=\"d-md-none\">W</span>\r\n                            </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                            <NavLink\r\n                                className={classnames(\"py-2 px-3\", {\r\n                                active: this.state.activeNav2 === 2\r\n                                })}\r\n                                href=\"#pablo\"\r\n                                onClick={e => this.toggleNavs(e, 1, 2, 2)}\r\n                                >\r\n                                <span className=\"d-none d-md-block\">Month</span>\r\n                                <span className=\"d-md-none\">M</span>\r\n                            </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        </div>\r\n                    </Row>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                    {/* Chart */}\r\n                    <div className=\"chart\">\r\n                        <Bar\r\n                        data={chartExample2[this.state.chartExample2Data]}\r\n                        options={chartExample2.options}\r\n                        getDatasetAtEvent={e => console.log(e)}\r\n                        />\r\n                    </div>\r\n                    </CardBody>\r\n                </Card>\r\n                </Col>\r\n                <Col className=\"mb-5 mb-xl-0\" xl=\"7\">\r\n                <Card className=\"bg-gradient-default shadow\">\r\n                    <CardHeader className=\"bg-transparent\">\r\n                    <Row className=\"align-items-center\">\r\n                        <div className=\"col\">\r\n                        <h6 className=\"text-uppercase text-light ls-1 mb-1\">\r\n                            Overview\r\n                        </h6>\r\n                        <h2 className=\"text-white mb-0\">Sleep</h2>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                        <Nav className=\"justify-content-end\" pills>\r\n                            <NavItem>\r\n                            <NavLink\r\n                                className={classnames(\"py-2 px-3\", {\r\n                                active: this.state.activeNav1 === 1\r\n                                })}\r\n                                data-toggle=\"tab\"\r\n                                href=\"#pablo\"\r\n                                onClick={e => this.toggleNavs(e, 1, 1, 1)}\r\n                            >\r\n                                <span className=\"d-none d-md-block\">Week</span>\r\n                                <span className=\"d-md-none\">W</span>\r\n                            </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                            <NavLink\r\n                                className={classnames(\"py-2 px-3\", {\r\n                                active: this.state.activeNav1 === 2\r\n                                })}\r\n                                href=\"#pablo\"\r\n                                onClick={e => this.toggleNavs(e, 1, 1, 2)}\r\n                            >\r\n                                <span className=\"d-none d-md-block\">Month</span>\r\n                                <span className=\"d-md-none\">M</span>\r\n                            </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        </div>\r\n                    </Row>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                    {/* Chart */}\r\n                    <div className=\"chart\">\r\n                        <Line\r\n                        data={chartExample1[this.state.chartExample1Data]}\r\n                        options={chartExample1.options}\r\n                        getDatasetAtEvent={e => console.log(e)}\r\n                        />\r\n                    </div>\r\n                    </CardBody>\r\n                </Card>\r\n                </Col>\r\n            </Row>\r\n            {/*Second Row */}\r\n            <Row className=\"mt-5\">\r\n            <Col className=\"mb-5 mb-xl-0\" xl=\"6\">\r\n                <Card className=\"shadow\">\r\n                <CardHeader className=\"bg-transparent\">\r\n                    <Row className=\"align-items-center\">\r\n                    <div className=\"col\">\r\n                    <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\r\n                        Overview\r\n                    </h6>\r\n                    <h2 className=\"mb-0\">Stress Breakdown (by score)</h2>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                    <Nav className=\"justify-content-end\" pills>\r\n                        <NavItem>\r\n                        <NavLink\r\n                            className={classnames(\"py-2 px-3\", {\r\n                            active: this.state.activeNav3 === 1\r\n                            })}\r\n                            href=\"#pablo\"\r\n                            onClick={e => this.toggleNavs(e, 2, 1, 1)}\r\n                            // onClick={e => e.preventDefault()}\r\n                            >\r\n                            <span className=\"d-none d-md-block\">Week</span>\r\n                            <span className=\"d-md-none\">W</span>\r\n                        </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                        <NavLink\r\n                            className={classnames(\"py-2 px-3\", {\r\n                            active: this.state.activeNav3 === 2\r\n                            })}\r\n                            href=\"#pablo\"\r\n                            onClick={e => this.toggleNavs(e, 2, 1, 2)}\r\n                            // onClick={e => e.preventDefault()}\r\n                            >\r\n                            <span className=\"d-none d-md-block\">Month</span>\r\n                            <span className=\"d-md-none\">M</span>\r\n                        </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    </div>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                {/* Chart */}\r\n                <div className=\"chart\">\r\n                    <Bar\r\n                    data={chartExample3[this.state.chartExample3Data]}\r\n                    options={chartExample3.options}\r\n                    getDatasetAtEvent={e => console.log(e)}\r\n                    />\r\n                </div>\r\n                </CardBody>\r\n                </Card>\r\n            </Col>\r\n            <Col className=\"mb-5 mb-xl-0\" xl=\"6\">\r\n                <Card className=\"shadow\">\r\n                <CardHeader className=\"bg-transparent\">\r\n                    <Row className=\"align-items-center\">\r\n                    <div className=\"col\">\r\n                    <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\r\n                        Overview\r\n                    </h6>\r\n                    <h2 className=\"mb-0\">Stress Breakdown (by type)</h2>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                    <Nav className=\"justify-content-end\" pills>\r\n                        <NavItem>\r\n                        <NavLink\r\n                            className={classnames(\"py-2 px-3\", {\r\n                            active: this.state.activeNav4 === 1\r\n                            })}\r\n                            href=\"#pablo\"\r\n                            onClick={e => this.toggleNavs(e, 2, 2, 1)}\r\n                            // onClick={e => e.preventDefault()}\r\n                            >\r\n                            <span className=\"d-none d-md-block\">Week</span>\r\n                            <span className=\"d-md-none\">W</span>\r\n                        </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                        <NavLink\r\n                            className={classnames(\"py-2 px-3\", {\r\n                            active: this.state.activeNav4 === 2\r\n                            })}\r\n                            href=\"#pablo\"\r\n                            onClick={e => this.toggleNavs(e, 2, 2, 2)}\r\n                            // onClick={e => e.preventDefault()}\r\n                            >\r\n                            <span className=\"d-none d-md-block\">Month</span>\r\n                            <span className=\"d-md-none\">M</span>\r\n                        </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    </div>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                {/* Chart */}\r\n                <div className=\"chart\">\r\n                    <Bar\r\n                    data={chartExample4[this.state.chartExample4Data]}\r\n                    options={chartExample4.options}\r\n                    getDatasetAtEvent={e => console.log(e)}\r\n                    />\r\n                </div>\r\n                </CardBody>\r\n                </Card>\r\n            </Col>\r\n            </Row>\r\n            \r\n        </Container>\r\n        <Container className=\"mt-5\" fluid>\r\n            <Graphs/>\r\n        </Container>\r\n        </>\r\n      )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    fetchedInitial: state.charts.fetchedChartsData,\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n)(Charts)","import React from 'react';\r\nimport {\r\n    Container,\r\n    Card,\r\n    CardHeader,\r\n    Button,\r\n    ListGroupItem,\r\n    ListGroup,\r\n    Row,\r\n    Col,\r\n    Nav,\r\n    NavItem\r\n} from 'reactstrap'\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport { receiveEntries } from 'lib/redux/actions/journal';\r\nimport { removeEntry } from 'lib/redux/actions/journal';\r\n\r\nconst firebase = require(\"firebase/app\");\r\nrequire(\"firebase/firestore\");\r\n\r\nclass Journal extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showED: {}\r\n        }\r\n      }\r\n\r\n    db = firebase.firestore();\r\n    email = localStorage.getItem(\"email\")\r\n\r\n    componentDidMount() {\r\n        if (!this.props.fetchedInitial){        \r\n            let docRef = this.db.collection(\"users\").doc(this.email).collection(\"journal\").orderBy('id')\r\n            docRef.get().then((doc) => {\r\n                var data = doc.docs.map(doc => doc.data())\r\n                this.props.receiveEntries(data)\r\n                this.setState({\r\n                    fetchedInitial: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Couldn't fetch journal entries. Error: \", error)\r\n            })\r\n        }\r\n    }\r\n\r\n    onEntryDelete(id) {\r\n        let docRef = this.db.collection(\"users\").doc(this.email).collection(\"journal\").where(\"id\", \"==\", id)\r\n        docRef.get().then((snapshot) => {\r\n            snapshot.forEach((doc) => {\r\n                doc.ref.delete()\r\n            })\r\n            this.props.removeEntry(id)\r\n            this.forceUpdate()\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"Could not delete the entry! ERROR:\", error);\r\n        })\r\n    }\r\n\r\n    onEntryEdit() {\r\n        console.log(\"Edited\")\r\n    }\r\n\r\n    render() {\r\n      return(\r\n        <>\r\n        <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\"/>\r\n        <Container className=\"mt--7\" fluid>\r\n            <Card className=\"bg-secondary shadow\">\r\n                <CardHeader className=\"bg-white border-0\">\r\n                    <Row className=\"align-items-center\">\r\n                    <Col xs=\"8\">\r\n                        <h3 className=\"mb-0\">Recent Notes</h3>\r\n                    </Col>\r\n                    <Col className=\"text-right\" xs=\"4\">\r\n                        <Nav className=\"justify-content-end\" pills>\r\n                            <NavItem className=\"py-3 px-3\">\r\n                            <h5 className=\"mb-0\">Sort by:</h5>\r\n                            </NavItem>\r\n                            <NavItem className=\"py-2 px-3\">\r\n                            <Button\r\n                                color=\"primary\"\r\n                                onClick={e => {e.preventDefault();  this.forceUpdate()}}\r\n                                size=\"sm\"\r\n                            >\r\n                                Date Created\r\n                            </Button>\r\n                            </NavItem>\r\n                            <NavItem className=\"py-2 px-3\">\r\n                            <Button\r\n                                color=\"primary\"\r\n                                onClick={e => e.preventDefault()}\r\n                                size=\"sm\"\r\n                            >\r\n                                Date Edited\r\n                            </Button>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <ListGroup flush>\r\n                    {/* Add hover over feature to display an edit and delete button */}\r\n                    { this.props.entries.length != 0 && this.props.entries.map(entry =>\r\n                    <ListGroupItem\r\n                    className=\"list-group-item-action flex-column align-items-start py-4 px-4\"\r\n                    href=\"#pablo\"\r\n                    onClick={e => e.preventDefault()}\r\n                    onMouseEnter={() => {this.state.showED[entry.id] = true; this.forceUpdate()}}\r\n                    onMouseLeave={() => {this.state.showED[entry.id] = false; this.forceUpdate()}}\r\n                    >\r\n                        <div className=\"d-flex w-100 justify-content-between\">\r\n                        <div>\r\n                            <div className=\"d-flex w-100 align-items-center\">\r\n                            <img\r\n                                alt=\"...\"\r\n                                className=\"avatar avatar-xs mr-2\"\r\n                                src={require(\"assets/img/theme/journal.png\")}\r\n                            />\r\n                            <h4 className=\"mb-1\">{entry.subject}</h4>\r\n                            </div>\r\n                        </div>\r\n                        <small>Last Edited {entry.date_edited}</small>\r\n                        </div>\r\n                        <Row>\r\n                            <Col xs=\"11\">\r\n                                <h6 className=\"mt-4 mb-2\">Created {entry.date_created} </h6>\r\n                                <p className=\"text-sm mb-0\">{entry.content}</p>\r\n                            </Col>\r\n                        {\r\n                            this.state.showED[entry.id] &&\r\n                            <Col xs=\"1\">\r\n                                <Button className=\"col mt-4 d-none d-md-block\" style={{bottom: 5}} color=\"default\" size=\"sm\" onClick={() => this.onEntryEdit()}>Edit</Button>\r\n                                <Button className=\"col mt-4 d-md-none\" style={{bottom: 2}} color=\"default\" size=\"sm\" onClick={() => this.onEntryEdit()}>E</Button>\r\n\r\n                                <Button className=\"col mt-1 d-none d-md-block\" style={{bottom: 0}} color=\"default\" size=\"sm\" onClick={() => this.onEntryDelete(entry.id)}>Delete</Button>\r\n                                <Button className=\"col mt-1 d-md-none\" style={{bottom: 0}} color=\"default\" size=\"sm\" onClick={() => this.onEntryDelete(entry.id)}>D</Button>\r\n                            </Col>\r\n                        }\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                    )}\r\n\r\n                    {this.props.entries.length == 0 &&\r\n                    <ListGroupItem\r\n                        className=\"list-group-item-action flex-column align-items-start py-4 px-4\"\r\n                    >\r\n                        <p className=\"text-md mb-0\">Notes created will be displayed here!</p>\r\n                    </ListGroupItem>\r\n                    }\r\n                </ListGroup>\r\n            </Card>\r\n        </Container>\r\n        </>\r\n      )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      entries: state.journal.entries,\r\n      fetchedInitial: state.journal.fetchedInitial,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        receiveEntries: (entries) => dispatch(receiveEntries(entries)),\r\n        removeEntry: (id) => dispatch(removeEntry(id))\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Journal)\r\n\r\n\r\n// export default Journal;","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Index from \"views/Index.js\";\nimport Profile from \"views/examples/Profile.js\";\nimport Register from \"views/examples/Register.js\";\nimport Login from \"views/examples/Login.js\";\nimport Charts from \"views/examples/Charts_page.js\";\nimport Journal from \"views/examples/Journal/Journal.js\";\n\nvar routes = [\n  {\n    path: \"/index\",\n    name: \"Dashboard\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component: Index,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/user-profile\",\n    name: \"User Profile\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: Profile,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/charts\",\n    name: \"Charts\",\n    icon: \"ni ni-bullet-list-67 text-red\",\n    component: Charts,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/login\",\n    name: \"Login\",\n    icon: \"ni ni-key-25 text-info\",\n    component: Login,\n    layout: \"/auth\"\n  },\n  {\n    path: \"/register\",\n    name: \"Register\",\n    icon: \"ni ni-circle-08 text-pink\",\n    component: Register,\n    layout: \"/auth\"\n  },\n  {\n    path: \"/journal\",\n    name: \"Journal\",\n    icon: \"ni ni-circle-08 text-pink\",\n    component: Journal,\n    layout: \"/admin\"\n  }\n];\nexport default routes;\n","export const addEntry = (id, subject, content, created) => {\r\n    return {\r\n        type: 'ADD_ENTRY',\r\n        id,\r\n        subject,\r\n        content,\r\n        created,\r\n        last_edited: created,\r\n    };\r\n}\r\n\r\nexport const updateEntry = (id, subject, content, created, edited) => {\r\n    return {\r\n        type: 'UPDATE_ENTRY',\r\n        id,\r\n        subject,\r\n        content,\r\n        created,\r\n        last_edited: edited,\r\n    };\r\n}\r\n\r\nexport const removeEntry = (id) => {\r\n    return {\r\n        type: 'REMOVE_ENTRY',\r\n        id,\r\n    };\r\n}\r\n\r\nexport const receiveEntries = (entries) => {\r\n    return {\r\n        type: 'RECEIVE_ENTRIES',\r\n        entries\r\n    };\r\n}","import React from 'react';\r\n\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalBody,\r\n    ModalFooter,\r\n    FormGroup,\r\n    Form,\r\n    Col,\r\n    Input,\r\n    Card,\r\n    CardHeader,\r\n    Row\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { addEntry } from 'lib/redux/actions/journal';\r\n\r\nconst firebase = require(\"firebase/app\");\r\nrequire(\"firebase/firestore\");\r\n\r\nclass JournalIcon extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            subject: '',\r\n            content: '',\r\n        }\r\n    }\r\n\r\n    journalSubmit = () => {\r\n        const monthName = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n        var date = new Date()\r\n        var today = monthName[date.getMonth()] + ' ' + date.getDate() + ', ' + date.getFullYear()\r\n\r\n        let entry_num = localStorage.getItem('num_journal_entries') ? parseInt(localStorage.getItem('num_journal_entries')) : (0)\r\n        localStorage.setItem('num_journal_entries', entry_num + 1)\r\n        \r\n        this.props.addEntry(entry_num, this.state.subject, this.state.content, today)\r\n\r\n        this.updateFirestore(entry_num, this.state.subject, this.state.content, today)\r\n    }\r\n\r\n    updateFirestore(entry_num, subject, content, today) {\r\n        let db = firebase.firestore();\r\n\r\n        const email = localStorage.getItem(\"email\")\r\n        let docRef = db.collection(\"users\").doc(email).collection(\"journal\")\r\n        docRef.add({\r\n            content: content,\r\n            date_created: today,\r\n            date_edited: today,\r\n            id: entry_num,\r\n            subject: subject,\r\n        })\r\n        .then(() => {\r\n            this.setState({\r\n                subject: '',\r\n                content: '',\r\n                open: false,\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"Could not update firestore with new journal entry. Error =\", error)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <div style={{position: \"fixed\", left: \"289px\",  bottom: \"25px\", zIndex: '1'}}>\r\n                    <Button style={{borderRadius: \"40%\"}} className=\"py-0 px-0\" onClick={() => {this.state.open=true; this.forceUpdate()}}>\r\n                        <img\r\n                        alt=\"...\"\r\n                        className=\"avatar avatar-xs\"\r\n                        src={require(\"assets/img/theme/journal.png\")}\r\n                        />\r\n                    </Button>\r\n                </div>\r\n                \r\n                <Modal isOpen={this.state.open} modalTransition={{timeout: 0}}>\r\n                    <Card className=\"bg-secondary shadow bg-white border-0\">\r\n                        <CardHeader className=\"align-items-end\">\r\n                            <Row>\r\n                                <Col xs=\"7\" className=\"mt-2\">\r\n                                    <h3> Create a Journal Entry! </h3>\r\n                                </Col>\r\n                                <Col xs=\"5\" className=\"mt-2\">\r\n                                    <Button close onClick={() => {this.state.open=false; this.forceUpdate()}}/>\r\n                                </Col>\r\n                            </Row>\r\n                        </CardHeader>\r\n                        <ModalBody>\r\n                            <div className=\"pl-lg-2\">\r\n                                <Form>\r\n                                    <FormGroup>\r\n                                        <label>Subject</label>\r\n                                        <Input\r\n                                            className=\"form-control-alternative\"\r\n                                            placeholder=\"Subject\"\r\n                                            rows=\"1\"\r\n                                            type=\"textarea\"\r\n                                            value={this.state.subject}\r\n                                            onChange={e => this.setState({subject: e.target.value})}\r\n                                        />\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <label>Content</label>\r\n                                        <Input\r\n                                            className=\"form-control-alternative\"\r\n                                            placeholder=\"Start your entry here ...\"\r\n                                            rows=\"4\"\r\n                                            type=\"textarea\"\r\n                                            value={this.state.content}\r\n                                            onChange={e => this.setState({content: e.target.value})}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Form>\r\n                            </div>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color='primary' className='mt--2' onClick={() => this.journalSubmit()}> Save </Button>\r\n                        </ModalFooter>\r\n                    </Card>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addEntry: (id, subject, content, date) => dispatch(addEntry(id, subject, content, date))\r\n    }\r\n}\r\n  \r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(JournalIcon)","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport App from '../App';\n\nimport routes from \"routes.js\";\nimport JournalIcon from \"views/examples/Journal/Journal_icon\";\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: localStorage.getItem('loggedIn') == 'true'\n    }\n  }\n  componentDidUpdate(e) {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    this.refs.mainContent.scrollTop = 0;\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    if (!this.state.isLoggedIn) {\n      return <Redirect to=\"/auth/login\" />\n    }\n    return (\n      <>\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          logo={{\n            innerLink: \"/admin/index\",\n            imgSrc: require(\"assets/img/theme/warrior_wellness.png\"),\n            imgAlt: \"...\"\n          }}\n        />\n        <div className=\"main-content\" ref=\"mainContent\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>\n            {this.getRoutes(routes)}\n            <Redirect from=\"*\" to=\"/admin/index\" />\n          </Switch>\n          <Container fluid>\n          <footer className=\"footer\">\n            <Row className=\"align-items-center justify-content-xl-between\">\n              <Col xl=\"6\">\n                <div className=\"copyright text-center text-xl-left text-muted\">\n                  <a className=\"font-weight-bold ml-1\" />\n                </div>\n              </Col>\n            </Row>\n          </footer>\n          </Container>\n        </div>\n        <App />\n        <JournalIcon/>\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\n\n// core components\n// import AuthNavbar from \"components/Navbars/AuthNavbar.js\";\nimport routes from \"routes.js\";\n\nclass Auth extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      modalOpen: true,\n    }\n  }\n  componentDidMount() {\n    document.body.classList.add(\"bg-default\");\n  }\n  componentWillUnmount() {\n    document.body.classList.remove(\"bg-default\");\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"main-content\">\n          {/* <AuthNavbar /> */}\n          <div className=\"header bg-gradient-info py-7 py-lg-8\">\n            <Container>\n              <div className=\"header-body text-center mb-7\">\n                <Row className=\"justify-content-center\">\n                  <Col lg=\"5\" md=\"6\">\n                    <h1 className=\"text-white\">Welcome!</h1>\n                    <p className=\"text-lead text-light\">\n                      Login or create new account to view your dashboard!\n                    </p>\n                  </Col>\n                </Row>\n              </div>\n            </Container>\n            <div className=\"separator separator-bottom separator-skew zindex-100\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                preserveAspectRatio=\"none\"\n                version=\"1.1\"\n                viewBox=\"0 0 2560 100\"\n                x=\"0\"\n                y=\"0\"\n              >\n                <polygon\n                  className=\"fill-default\"\n                  points=\"2560 0 2560 100 0 100\"\n                />\n              </svg>\n            </div>\n          </div>\n          {/* Page content */}\n          <Container className=\"mt--8 pb-5\">\n            <Row className=\"justify-content-center\">\n              <Switch>\n                {this.getRoutes(routes)}\n                <Redirect from=\"*\" to=\"/auth/login\" />\n              </Switch>\n            </Row>\n          </Container>\n        </div>\n        <footer className=\"py-5\">\n          <Container>\n            <Row className=\"align-items-center justify-content-xl-between\" />\n          </Container>\n        </footer>\n      </>\n    );\n  }\n}\n\nexport default Auth;\n","//TODO: add SORT_ENTRIES_DATE and SORT_ENTRIES_EDITED actions and corresponding reducers\r\nconst initialState = {\r\n    fetchedInitial: false,\r\n    entries: [],\r\n  };\r\n\r\nconst journalReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_ENTRY':\r\n            return Object.assign({}, state, {\r\n                entries: [\r\n                    {\r\n                        id: action.id,\r\n                        date_created: action.created,\r\n                        date_edited: action.last_edited,\r\n                        subject: action.subject,\r\n                        content: action.content\r\n                    },\r\n                    ...state.entries\r\n                ],\r\n            });\r\n\r\n        case 'REMOVE_ENTRY':\r\n            const filtered = state.entries.filter(entry => entry.id != action.id)\r\n\r\n            return Object.assign({}, state, {\r\n                entries: filtered,\r\n            });\r\n\r\n        case 'UPDATE_ENTRY':\r\n            const excluded = state.entries.filter(entry => entry.id != action.id)\r\n\r\n            return Object.assign({}, state, {\r\n                entries: [\r\n                    ...excluded,\r\n                    {\r\n                        id: action.id,\r\n                        subject: action.subject,\r\n                        content: action.content,\r\n                        date_created: action.created,\r\n                        date_edited: action.edited,\r\n                    },\r\n                ],\r\n            });\r\n\r\n        case 'RECEIVE_ENTRIES':\r\n            if (!action.entries) {\r\n                return state\r\n            }\r\n\r\n            return Object.assign({}, state, {\r\n                fetchedInitial: true,\r\n                entries: [\r\n                    ...action.entries.reverse()\r\n                ],\r\n            });\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default journalReducer;","const initialState = {\r\n    fetchedChartsData: false,\r\n    overalls: {},\r\n}\r\n\r\nconst chartsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"FETCHED_CHARTS_DATA\":\r\n            return Object.assign({}, state, {\r\n                fetchedChartsData: true\r\n            })\r\n\r\n        case \"ADD_OVERALLS\":\r\n            return Object.assign({}, state, {\r\n                overalls: action.overalls\r\n            })\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default chartsReducer","import journalReducer from './journal'\r\nimport chartsReducer from './charts'\r\nimport {combineReducers} from 'redux'\r\n\r\nconst allReducers = combineReducers({\r\n    journal: journalReducer,\r\n    charts: chartsReducer\r\n})\r\n\r\nexport default allReducers;","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Switch, Redirect, HashRouter } from \"react-router-dom\";\n\nimport \"assets/plugins/nucleo/css/nucleo.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/scss/argon-dashboard-react.scss\";\n\nimport AdminLayout from \"layouts/Admin.js\";\nimport AuthLayout from \"layouts/Auth.js\";\n\n//redux\nimport { createStore } from 'redux';\nimport allReducer from 'lib/redux/reducers'\nimport { Provider } from 'react-redux';\n\nconst store = createStore(\n    allReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\nexport default store;\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <Switch>\n        <Route path=\"/auth\" render={props => <AuthLayout {...props} />} />\n        <Route path=\"/admin\" render={props => <AdminLayout {...props}/>} />\n        <Redirect from=\"/\" to='/auth/login'/>\n      </Switch>\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nconst Chart = require(\"chart.js\");\n//\n// Chart extension for making the bars rounded\n// Code from: https://codepen.io/jedtrow/full/ygRYgo\n//\n\nChart.elements.Rectangle.prototype.draw = function() {\n  var ctx = this._chart.ctx;\n  var vm = this._view;\n  var left, right, top, bottom, signX, signY, borderSkipped, radius;\n  var borderWidth = vm.borderWidth;\n  // Set Radius Here\n  // If radius is large enough to cause drawing errors a max radius is imposed\n  var cornerRadius = 6;\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || \"bottom\";\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || \"left\";\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    var halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    var borderLeft = left + (borderSkipped !== \"left\" ? halfStroke * signX : 0);\n    var borderRight =\n      right + (borderSkipped !== \"right\" ? -halfStroke * signX : 0);\n    var borderTop = top + (borderSkipped !== \"top\" ? halfStroke * signY : 0);\n    var borderBottom =\n      bottom + (borderSkipped !== \"bottom\" ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  var corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  var borders = [\"bottom\", \"left\", \"top\", \"right\"];\n  var startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  var corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (var i = 1; i < 4; i++) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    // let nextCorner = cornerAt(nextCornerId);\n\n    let width = corners[2][0] - corners[1][0];\n    let height = corners[0][1] - corners[1][1];\n    let x = corners[1][0];\n    let y = corners[1][1];\n    // eslint-disable-next-line\n    var radius = cornerRadius;\n\n    // Fix radius being too large\n    if (radius > height / 2) {\n      radius = height / 2;\n    }\n    if (radius > width / 2) {\n      radius = width / 2;\n    }\n\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n};\n\nvar mode = \"light\"; //(themeMode) ? themeMode : 'light';\nvar fonts = {\n  base: \"Open Sans\"\n};\n\n// Colors\nvar colors = {\n  gray: {\n    100: \"#f6f9fc\",\n    200: \"#e9ecef\",\n    300: \"#dee2e6\",\n    400: \"#ced4da\",\n    500: \"#adb5bd\",\n    600: \"#8898aa\",\n    700: \"#525f7f\",\n    800: \"#32325d\",\n    900: \"#212529\"\n  },\n  theme: {\n    default: \"#172b4d\",\n    primary: \"#5e72e4\",\n    secondary: \"#f4f5f7\",\n    info: \"#11cdef\",\n    success: \"#2dce89\",\n    danger: \"#f5365c\",\n    warning: \"#fb6340\"\n  },\n  black: \"#12263F\",\n  white: \"#FFFFFF\",\n  transparent: \"transparent\"\n};\n\n// Methods\n\n// Chart.js global options\nfunction chartOptions() {\n  // Options\n  var options = {\n    defaults: {\n      global: {\n        responsive: true,\n        maintainAspectRatio: false,\n        defaultColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontFamily: fonts.base,\n        defaultFontSize: 13,\n        layout: {\n          padding: 0\n        },\n        legend: {\n          display: false,\n          position: \"bottom\",\n          labels: {\n            usePointStyle: true,\n            padding: 16\n          }\n        },\n        elements: {\n          point: {\n            radius: 0,\n            backgroundColor: colors.theme[\"primary\"]\n          },\n          line: {\n            tension: 0.4,\n            borderWidth: 4,\n            borderColor: colors.theme[\"primary\"],\n            backgroundColor: colors.transparent,\n            borderCapStyle: \"rounded\"\n          },\n          rectangle: {\n            backgroundColor: colors.theme[\"warning\"]\n          },\n          arc: {\n            backgroundColor: colors.theme[\"primary\"],\n            borderColor: mode === \"dark\" ? colors.gray[800] : colors.white,\n            borderWidth: 4\n          }\n        },\n        tooltips: {\n          enabled: true,\n          mode: \"index\",\n          intersect: false\n        }\n      },\n      doughnut: {\n        cutoutPercentage: 83,\n        legendCallback: function(chart) {\n          var data = chart.data;\n          var content = \"\";\n\n          data.labels.forEach(function(label, index) {\n            var bgColor = data.datasets[0].backgroundColor[index];\n\n            content += '<span class=\"chart-legend-item\">';\n            content +=\n              '<i class=\"chart-legend-indicator\" style=\"background-color: ' +\n              bgColor +\n              '\"></i>';\n            content += label;\n            content += \"</span>\";\n          });\n\n          return content;\n        }\n      }\n    }\n  };\n\n  // yAxes\n  Chart.scaleService.updateScaleDefaults(\"linear\", {\n    gridLines: {\n      borderDash: [2],\n      borderDashOffset: [2],\n      color: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      drawBorder: false,\n      drawTicks: false,\n      lineWidth: 0,\n      zeroLineWidth: 0,\n      zeroLineColor: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      zeroLineBorderDash: [2],\n      zeroLineBorderDashOffset: [2]\n    },\n    ticks: {\n      beginAtZero: true,\n      padding: 10,\n      callback: function(value) {\n        if (!(value % 10)) {\n          return value;\n        }\n      }\n    }\n  });\n\n  // xAxes\n  Chart.scaleService.updateScaleDefaults(\"category\", {\n    gridLines: {\n      drawBorder: false,\n      drawOnChartArea: false,\n      drawTicks: false\n    },\n    ticks: {\n      padding: 20\n    }\n  });\n\n  return options;\n}\n\n// Parse global options\nfunction parseOptions(parent, options) {\n  for (var item in options) {\n    if (typeof options[item] !== \"object\") {\n      parent[item] = options[item];\n    } else {\n      parseOptions(parent[item], options[item]);\n    }\n  }\n}\n\nmodule.exports = {\n  chartOptions, // used inside src/views/Index.js\n  parseOptions, // used inside src/views/Index.js\n};\n","module.exports = __webpack_public_path__ + \"static/media/team-4-800x800.942a8bda.jpg\";"],"sourceRoot":""}